{"ast":null,"code":"import { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst ADD_POST = 'ADD-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\nlet initialState = {\n  posts: [{\n    id: 3,\n    post: 'Hi, how are you?',\n    likesCount: 5\n  }, {\n    id: 2,\n    post: 'It\\'s my first post',\n    likesCount: 32\n  }, {\n    id: 1,\n    post: 'I\\'m learn react from it-kamasutra.com',\n    likesCount: 3\n  }],\n  profile: [],\n  status: '',\n  editMode: true\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      {\n        return { ...state,\n          posts: [...state.posts, {\n            id: 4,\n            post: action.newPostBody,\n            likesCount: 0\n          }]\n        };\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          profile: action.profile\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const getProfile = userId => async dispatch => {\n  let response = await usersAPI.getProfile(userId);\n  dispatch(setUserProfile(response.data));\n};\nexport const getStatus = userId => async dispatch => {\n  let response = await profileAPI.getStatus(userId);\n  dispatch(setStatus(response.data));\n};\nexport const updateStatus = status => async dispatch => {\n  let response = await profileAPI.updateStatus(status);\n\n  if (response.data.resultCode === 0) {\n    dispatch(setStatus(status));\n  }\n};\nexport const savePhoto = file => async dispatch => {\n  let response = await profileAPI.savePhoto(file);\n\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n};\nexport const saveProfile = profile => async (dispatch, getState) => {\n  const userId = getState().auth.userId;\n  let response = await profileAPI.saveProfile(profile);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getProfile(userId));\n  } else {\n    dispatch(stopSubmit(\"edit-profile\", {\n      _error: response.data.messages[0]\n    }));\n    return Promise.reject(response.data.messages[0]); // dispatch(stopSubmit(\"edit-profile\", {\"contacts\" : {'facebook': response.data.messages[0]}}))\n  }\n};\nexport const addPostAC = newPostBody => ({\n  type: 'ADD-POST',\n  newPostBody\n});\nexport const setUserProfile = profile => ({\n  type: 'SET_USER_PROFILE',\n  profile\n});\nexport const setStatus = status => ({\n  type: 'SET_STATUS',\n  status\n});\nexport const savePhotoSuccess = photos => ({\n  type: 'SAVE_PHOTO_SUCCESS',\n  photos\n});\nexport default profileReducer;","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/redux/profileReducer.js"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","initialState","posts","id","post","likesCount","profile","status","editMode","profileReducer","state","action","type","newPostBody","photos","getProfile","userId","dispatch","response","setUserProfile","data","getStatus","setStatus","updateStatus","resultCode","savePhoto","file","savePhotoSuccess","saveProfile","getState","auth","_error","messages","Promise","reject","addPostAC"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST'\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\nconst SET_STATUS = 'SET_STATUS'\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\n\nlet initialState = {\n    posts: [\n        {id: 3, post: 'Hi, how are you?', likesCount: 5},\n        {id: 2, post: 'It\\'s my first post', likesCount: 32},\n        {id: 1, post: 'I\\'m learn react from it-kamasutra.com', likesCount: 3},\n    ],\n    profile: [],\n    status: '',\n    editMode: true\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            return {\n                ...state,\n                posts: [...state.posts, {id: 4, post: action.newPostBody, likesCount: 0}]\n            }\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state, profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state, status: action.status\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state, profile: {...state.profile, photos: action.photos}\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const getProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n}\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n}\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n}\n\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos))\n    }\n}\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId\n    let response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode === 0) {\n        dispatch(getProfile(userId))\n    } else {\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\n        return Promise.reject(response.data.messages[0])\n        // dispatch(stopSubmit(\"edit-profile\", {\"contacts\" : {'facebook': response.data.messages[0]}}))\n    }\n}\n\nexport const addPostAC = (newPostBody) => ({type: 'ADD-POST', newPostBody})\nexport const setUserProfile = (profile) => ({type: 'SET_USER_PROFILE', profile})\nexport const setStatus = (status) => ({type: 'SET_STATUS', status})\nexport const savePhotoSuccess = (photos) => ({type: 'SAVE_PHOTO_SUCCESS', photos})\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}