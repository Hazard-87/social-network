{"ast":null,"code":"var _jsxFileName = \"/media/hazard/\\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0434\\u0438\\u0441\\u043A/react/project/react-deploy/src/components/common/FormsControls/FormsControl.js\";\nimport React from \"react\";\nimport styles from './FormsControl.module.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst FormCon = props => {\n  const hasError = props.meta.touched && props.meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, props.children) // <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n  //     <div>\n  //         {props.children}\n  //     </div>\n  //     {hasError && <span> {props.meta.error} </span>}\n  // </div>\n  ;\n};\n\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    multiline: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }))));\n};\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  })));\n};\nexport const Check = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 59\n      }\n    })),\n    label: \"Remember me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }));\n};\nexport const Checked = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 59\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 32\n    }\n  }));\n};\nexport const Log = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    label: \"Email\",\n    id: \"standard-basic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 32\n    }\n  })));\n};\nexport const Pass = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    id: \"standard-password-input\",\n    label: \"Password\",\n    type: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 32\n    }\n  })));\n};\nexport const Logon = props => {\n  // const {input, meta, child, ...restProps} = props\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"component-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n    id: \"component-error\",\n    \"aria-describedby\": \"component-error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(FormHelperText, {\n    id: \"component-error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Error\")));\n};","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/components/common/FormsControls/FormsControl.js"],"names":["React","styles","TextField","Checkbox","FormControlLabel","FormControl","InputLabel","FormHelperText","FormCon","props","hasError","meta","touched","error","children","Textarea","input","child","restProps","Input","Check","Checked","Log","Pass","Logon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from './FormsControl.module.css'\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\nconst FormCon = (props) => {\n    const hasError = props.meta.touched && props.meta.error;\n    return (\n        <div>\n            {props.children}\n        </div>\n\n        // <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n        //     <div>\n        //         {props.children}\n        //     </div>\n        //     {hasError && <span> {props.meta.error} </span>}\n        // </div>\n\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <div>\n        <FormCon {...props}><TextField  {...input} {...restProps}\n                                        multiline variant=\"outlined\"/></FormCon>\n\n    </div>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><TextField {...input} {...restProps}\n                                          variant=\"outlined\"/></FormCon>\n}\n\nexport const Check = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={<Checkbox {...input} {...restProps} color=\"primary\"\n                                                                    inputProps={{'aria-label': 'secondary checkbox'}}\n    />} label='Remember me'/></FormCon>\n}\nexport const Checked = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={<Checkbox {...input} {...restProps} color=\"primary\"\n                                                                    inputProps={{'aria-label': 'secondary checkbox'}}\n    />}/></FormCon>\n}\n\n\nexport const Log = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><TextField {...input} {...restProps} label=\"Email\" id=\"standard-basic\"\n    /></FormCon>\n}\n\nexport const Pass = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><TextField {...input} {...restProps} id=\"standard-password-input\"\n                                          label=\"Password\" type=\"password\"\n                                          autoComplete=\"current-password\"\n    /></FormCon>\n}\n\n\nexport const Logon = (props) => {\n    // const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}>\n        <FormControl {...props} error>\n            <InputLabel htmlFor=\"component-error\">Name</InputLabel>\n            <Input {...props}\n                id=\"component-error\"\n                aria-describedby=\"component-error-text\"\n            />\n            <FormHelperText id=\"component-error-text\">Error</FormHelperText>\n        </FormControl>\n    </FormCon>\n}"]},"metadata":{},"sourceType":"module"}