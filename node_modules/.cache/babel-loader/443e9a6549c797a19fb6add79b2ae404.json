{"ast":null,"code":"import _toConsumableArray from\"/home/hazard/react/project/01-project/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import classes from'./MyPosts.module.css';import Posts from\"../Posts/Posts\";import*as form from\"redux-form\";import{Field,reduxForm}from\"redux-form\";import{maxLengthCreator,required}from\"../../../utils/validation/validators\";import{Textarea}from\"../../common/FormsControls/FormsControl\";var MyPosts=React.memo(function(props){var postElements=_toConsumableArray(props.posts).reverse().map(function(post){return/*#__PURE__*/React.createElement(Posts,{message:post.post,likesCount:post.likesCount});});var addNewPost=function addNewPost(values){props.addPost(values.newPostBody);values.newPostBody='';};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{className:classes.myPosts},\"My posts\"),/*#__PURE__*/React.createElement(MyPostsReduxForm,{onSubmit:addNewPost})),/*#__PURE__*/React.createElement(\"div\",{className:classes.posts},postElements));});var maxLength=maxLengthCreator(15);var MyPostsForm=function MyPostsForm(props){return/*#__PURE__*/React.createElement(\"form\",{onSubmit:props.handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Field,{className:classes.newPost,component:Textarea,name:'newPostBody',placeholder:'Your post...',validate:[required,maxLength]})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{className:classes.send},\"Send\")));};var MyPostsReduxForm=reduxForm({form:'addPostForm'})(MyPostsForm);export default MyPosts;","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","classes","Posts","form","Field","reduxForm","maxLengthCreator","required","Textarea","MyPosts","memo","props","postElements","posts","reverse","map","post","likesCount","addNewPost","values","addPost","newPostBody","myPosts","maxLength","MyPostsForm","handleSubmit","newPost","send","MyPostsReduxForm"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gBAAlB,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,YAAtB,CACA,OAAQC,KAAR,CAAeC,SAAf,KAA+B,YAA/B,CACA,OAAQC,gBAAR,CAA0BC,QAA1B,KAAyC,sCAAzC,CACA,OAAQC,QAAR,KAAuB,yCAAvB,CAGA,GAAMC,CAAAA,OAAO,CAAGT,KAAK,CAACU,IAAN,CAAW,SAAAC,KAAK,CAAI,CAChC,GAAIC,CAAAA,YAAY,CAAG,mBAAID,KAAK,CAACE,KAAV,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+B,SAAAC,IAAI,qBAAI,oBAAC,KAAD,EAAO,OAAO,CAAEA,IAAI,CAACA,IAArB,CAA2B,UAAU,CAAEA,IAAI,CAACC,UAA5C,EAAJ,EAAnC,CAAnB,CAEA,GAAIC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAY,CACzBR,KAAK,CAACS,OAAN,CAAcD,MAAM,CAACE,WAArB,EACAF,MAAM,CAACE,WAAP,CAAqB,EAArB,CACH,CAHD,CAIA,mBACI,4CACI,4CACI,0BAAI,SAAS,CAAEpB,OAAO,CAACqB,OAAvB,aADJ,cAEI,oBAAC,gBAAD,EAAkB,QAAQ,CAAEJ,UAA5B,EAFJ,CADJ,cAKI,2BAAK,SAAS,CAAEjB,OAAO,CAACY,KAAxB,EACKD,YADL,CALJ,CADJ,CAWH,CAlBe,CAAhB,CAoBA,GAAMW,CAAAA,SAAS,CAAGjB,gBAAgB,CAAC,EAAD,CAAlC,CAEA,GAAIkB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACb,KAAD,CAAW,CACzB,mBACI,4BAAM,QAAQ,CAAEA,KAAK,CAACc,YAAtB,eACI,4CACI,oBAAC,KAAD,EAAO,SAAS,CAAExB,OAAO,CAACyB,OAA1B,CAAmC,SAAS,CAAElB,QAA9C,CAAwD,IAAI,CAAE,aAA9D,CACO,WAAW,CAAE,cADpB,CACoC,QAAQ,CAAE,CAACD,QAAD,CAAWgB,SAAX,CAD9C,EADJ,CADJ,cAKI,4CACI,8BAAQ,SAAS,CAAEtB,OAAO,CAAC0B,IAA3B,SADJ,CALJ,CADJ,CAWH,CAZD,CAcA,GAAMC,CAAAA,gBAAgB,CAAGvB,SAAS,CAAC,CAACF,IAAI,CAAE,aAAP,CAAD,CAAT,CAAiCqB,WAAjC,CAAzB,CAEA,cAAef,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport * as form from \"redux-form\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\n\n\nconst MyPosts = React.memo(props => {\n    let postElements = [...props.posts].reverse().map(post => <Posts message={post.post} likesCount={post.likesCount}/>)\n\n    let addNewPost = (values) => {\n        props.addPost(values.newPostBody)\n        values.newPostBody = ''\n    }\n    return (\n        <div>\n            <div>\n                <h1 className={classes.myPosts}>My posts</h1>\n                <MyPostsReduxForm onSubmit={addNewPost}/>\n            </div>\n            <div className={classes.posts}>\n                {postElements}\n            </div>\n        </div>\n    )\n})\n\nconst maxLength = maxLengthCreator(15)\n\nlet MyPostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={classes.newPost} component={Textarea} name={'newPostBody'}\n                       placeholder={'Your post...'} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button className={classes.send}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}