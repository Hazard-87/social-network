{"ast":null,"code":"var _jsxFileName = \"/home/hazard/react/project/react-deploy/src/components/Login/Login.jsx\";\nimport React from \"react\";\nimport styles from './Login.module.css';\nimport classes from '../common/FormsControls/FormsControl.module.css';\nimport { reduxForm } from \"redux-form\";\nimport { Input, сreateField } from \"../common/FormsControls/FormsControl\";\nimport { required } from \"../../utils/validation/validators\";\nimport { login } from '../../redux/auth-reducer';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\"; // const handleFocus = (event) => event.target.select();\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    role: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, сreateField('Email', 'email', [required], Input, {\n    type: 'email'\n  }), сreateField('Password', 'password', [required], Input, {\n    type: 'password'\n  }), сreateField(null, 'rememberMe', [], Input, {\n    type: 'checkbox'\n  }, 'remember me'), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Login\")), props.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, props.error)));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/profile`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    });\n  }\n\n  debugger;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  authorizesUserId: state.auth.userId\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/hazard/react/project/react-deploy/src/components/Login/Login.jsx"],"names":["React","styles","classes","reduxForm","Input","сreateField","required","login","connect","Redirect","LoginForm","props","handleSubmit","type","error","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememberMe","isAuth","body","wrap","mapStateToProps","state","auth","authorizesUserId","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from './Login.module.css';\nimport classes from '../common/FormsControls/FormsControl.module.css'\nimport {reduxForm} from \"redux-form\";\nimport {Input, сreateField} from \"../common/FormsControls/FormsControl\";\nimport {required} from \"../../utils/validation/validators\";\nimport {login} from '../../redux/auth-reducer'\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\n// const handleFocus = (event) => event.target.select();\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} role='form'>\n            <div>\n                {сreateField ('Email', 'email', [required], Input, {type: 'email'})}\n                {сreateField ('Password', 'password', [required], Input, {type: 'password'})}\n                {сreateField (null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\n                {/*<label for='email'>Email</label>*/}\n            {/*    <Field placeholder={'email'} name={'email'} type='email' class='form-control' onFocus={handleFocus}*/}\n            {/*           component={Input} validate={[required]}/>*/}\n            {/*</div>*/}\n            {/*<div className={styles.input}>*/}\n            {/*    <label for='password'>Password</label>*/}\n            {/*    <Field placeholder={'password'} name={'password'} type='password' class='form-control'*/}\n            {/*           onFocus={handleFocus}*/}\n            {/*           component={Input} validate={[required]}/>*/}\n            {/*</div>*/}\n            {/*<div class='checkbox'>*/}\n            {/*    <label for='password'>*/}\n            {/*        <Field component={Input} className={styles.checkbox} name={'rememberMe'} type={'checkbox'}/>*/}\n            {/*        remember me*/}\n            {/*    </label>*/}\n            {/*</div>*/}\n            <div className={styles.login}>\n                <button class='btn btn-success'>Login</button>\n            </div>\n            {props.error && <div className={classes.formSummaryError}>\n                {props.error}\n            </div>\n            }\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={`/profile`}/>\n    }\ndebugger\n    return (\n        <div className={styles.body}>\n            <div className={styles.wrap}>\n                <LoginReduxForm onSubmit={onSubmit}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    authorizesUserId: state.auth.userId\n})\nexport default connect(mapStateToProps, {login})(Login)"]},"metadata":{},"sourceType":"module"}