{"ast":null,"code":"var _jsxFileName = \"/home/hazard/react/project/01-project/my-app/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React, { Component } from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validation/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControl\";\nimport * as form from \"redux-form\";\n\nclass MyPosts extends Component {\n  // shouldComponentUpdate(nextProps, nextState) {\n  //     return nextProps != this.props || nextState != this.state\n  // }\n  componentDidUpdate(prevProps, prevState) {\n    console.log('didUpdate');\n  }\n\n  render() {\n    console.log('render');\n    let postElements = this.props.posts.map(post => /*#__PURE__*/React.createElement(Posts, {\n      message: post.post,\n      likesCount: post.likesCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 57\n      }\n    }));\n\n    let addNewPost = values => {\n      this.props.addPost(values.newPostBody);\n      values.newPostBody = '';\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: classes.myPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, \"My posts\"), /*#__PURE__*/React.createElement(MyPostsReduxForm, {\n      onSubmit: addNewPost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, postElements));\n  }\n\n}\n\nconst maxLength = maxLengthCreator(15);\n\nlet MyPostsForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: classes.newPost,\n    component: Textarea,\n    name: 'newPostBody',\n    placeholder: 'Your post...',\n    validate: [required, maxLength],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\n\nconst MyPostsReduxForm = reduxForm({\n  form: 'addPostForm'\n})(MyPostsForm);\nexport default MyPosts;","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","Component","classes","Posts","Field","reduxForm","maxLengthCreator","required","Textarea","form","MyPosts","componentDidUpdate","prevProps","prevState","console","log","render","postElements","props","posts","map","post","likesCount","addNewPost","values","addPost","newPostBody","myPosts","maxLength","MyPostsForm","handleSubmit","newPost","send","MyPostsReduxForm"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,sCAAzC;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;;AAGA,MAAMC,OAAN,SAAsBT,SAAtB,CAAgC;AAC5B;AACA;AACA;AACAU,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACTF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACI,QAAIE,YAAY,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBAAI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAEA,IAAI,CAACA,IAArB;AAA2B,MAAA,UAAU,EAAEA,IAAI,CAACC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CAAnB;;AAEA,QAAIC,UAAU,GAAIC,MAAD,IAAY;AACzB,WAAKN,KAAL,CAAWO,OAAX,CAAmBD,MAAM,CAACE,WAA1B;AACAF,MAAAA,MAAM,CAACE,WAAP,GAAqB,EAArB;AACH,KAHD;;AAIA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAExB,OAAO,CAACyB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEJ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAErB,OAAO,CAACiB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,YADL,CALJ,CADJ;AAWH;;AA3B2B;;AA8BhC,MAAMW,SAAS,GAAGtB,gBAAgB,CAAC,EAAD,CAAlC;;AAEA,IAAIuB,WAAW,GAAIX,KAAD,IAAW;AACzB,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACY,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,OAA1B;AAAmC,IAAA,SAAS,EAAEvB,QAA9C;AAAwD,IAAA,IAAI,EAAE,aAA9D;AACO,IAAA,WAAW,EAAE,cADpB;AACoC,IAAA,QAAQ,EAAE,CAACD,QAAD,EAAWqB,SAAX,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAE1B,OAAO,CAAC8B,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CALJ,CADJ;AAWH,CAZD;;AAcA,MAAMC,gBAAgB,GAAG5B,SAAS,CAAC;AAACI,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAiCoB,WAAjC,CAAzB;AAEA,eAAenB,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\nimport * as form from \"redux-form\";\n\n\nclass MyPosts extends Component {\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return nextProps != this.props || nextState != this.state\n    // }\n    componentDidUpdate(prevProps, prevState) {\n        console.log('didUpdate')\n    }\n\n    render() {\n    console.log('render')\n        let postElements = this.props.posts.map(post => <Posts message={post.post} likesCount={post.likesCount}/>)\n\n        let addNewPost = (values) => {\n            this.props.addPost(values.newPostBody)\n            values.newPostBody = ''\n        }\n        return (\n            <div>\n                <div>\n                    <h1 className={classes.myPosts}>My posts</h1>\n                    <MyPostsReduxForm onSubmit={addNewPost}/>\n                </div>\n                <div className={classes.posts}>\n                    {postElements}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst maxLength = maxLengthCreator(15)\n\nlet MyPostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={classes.newPost} component={Textarea} name={'newPostBody'}\n                       placeholder={'Your post...'} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button className={classes.send}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}