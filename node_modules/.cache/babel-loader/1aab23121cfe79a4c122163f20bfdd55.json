{"ast":null,"code":"var _jsxFileName = \"/home/hazard/WebstormProjects/social-network/src/components/Login/Login.jsx\";\nimport React from \"react\";\nimport styles from './Login.module.css';\nimport classes from '../common/FormsControls/FormsControl.module.css';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Check, Input, Log, Pass } from \"../common/FormsControls/FormsControl\";\nimport { required } from \"../../utils/validation/validators\";\nimport { login } from '../../redux/auth-reducer';\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst handleFocus = event => event.target.select();\n\nconst LoginForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    role: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: 'email',\n    type: \"email\",\n    onFocus: handleFocus,\n    component: Log,\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: 'password',\n    onFocus: handleFocus,\n    component: Pass,\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Check,\n    className: styles.checkbox,\n    name: 'rememberMe',\n    type: 'checkbox',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  })), props.captchaUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: props.captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 34\n    }\n  }), props.captchaUrl && /*#__PURE__*/React.createElement(Field, {\n    placeholder: 'captcha',\n    name: 'captcha',\n    component: Input,\n    validate: [required],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 34\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.handleSubmit,\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Login\")), props.error && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formSummaryError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, props.error));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/profile`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.wrap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: props.captchaUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  authorizesUserId: state.auth.userId,\n  captchaUrl: state.auth.captchaUrl\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/home/hazard/WebstormProjects/social-network/src/components/Login/Login.jsx"],"names":["React","styles","classes","Field","reduxForm","Check","Input","Log","Pass","required","login","connect","Redirect","Button","handleFocus","event","target","select","LoginForm","props","handleSubmit","checkbox","captchaUrl","error","formSummaryError","LoginReduxForm","form","Login","onSubmit","formData","email","password","rememberMe","captcha","isAuth","body","wrap","mapStateToProps","state","auth","authorizesUserId","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from './Login.module.css';\nimport classes from '../common/FormsControls/FormsControl.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Check, Input, Log, Pass} from \"../common/FormsControls/FormsControl\";\nimport {required} from \"../../utils/validation/validators\";\nimport {login} from '../../redux/auth-reducer'\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nconst handleFocus = (event) => event.target.select();\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} role='form'>\n            <div>\n                <Field name={'email'} type='email' onFocus={handleFocus}\n                       component={Log} validate={[required]}/>\n            </div>\n            <div>\n                <Field name={'password'}\n                       onFocus={handleFocus}\n                       component={Pass} validate={[required]}/>\n            </div>\n            <div>\n                    <Field component={Check} className={styles.checkbox} name={'rememberMe'} type={'checkbox'}/>\n            </div>\n\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\n            {props.captchaUrl && <Field placeholder={'captcha'} name={'captcha'}\n                   component={Input} validate={[required]}/>}\n\n            <div className={styles.login}>\n                <Button onClick={props.handleSubmit} variant=\"outlined\" color=\"primary\">Login</Button>\n            </div>\n            {props.error && <div className={classes.formSummaryError}>\n                {props.error}\n            </div>\n            }\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={`/profile`}/>\n    }\n\n    return (\n        <div className={styles.body}>\n            <div className={styles.wrap}>\n                <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    authorizesUserId: state.auth.userId,\n    captchaUrl: state.auth.captchaUrl\n})\nexport default connect(mapStateToProps, {login})(Login)"]},"metadata":{},"sourceType":"module"}