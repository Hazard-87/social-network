{"ast":null,"code":"import _slicedToArray from\"/home/hazard/react/project/01-project/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import styles from'./Paginator.module.css';var Paginator=function Paginator(props){var portionSize=10;var pagesCount=Math.ceil(props.totalPageCount/props.pageSize);var pages=[];for(var i=1;i<=pagesCount;i++){if(i<=pagesCount){pages.push(i);}}var portionCount=Math.ceil(pagesCount/portionSize);var _useState=useState(1),_useState2=_slicedToArray(_useState,2),portionNumber=_useState2[0],setPortionNumber=_useState2[1];var leftPortionPageNumber=(portionNumber-1)*portionSize+1;var rightPortionPageNumber=portionNumber*portionSize;return/*#__PURE__*/React.createElement(\"div\",{className:styles.paginator},portionNumber>1&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){setPortionNumber(portionNumber-1);}},\"PREV\"),pages.filter(function(p){return p>=leftPortionPageNumber&&p<=rightPortionPageNumber;}).map(function(p){return/*#__PURE__*/React.createElement(\"span\",{className:props.currentPage===p?styles.selectedPage:styles.pageNumber,onClick:function onClick(e){props.onPageChanged(p);}},p);}),portionCount>portionNumber&&/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(e){setPortionNumber(portionNumber+1);}},\"NEXT\"));};export default Paginator;","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","Paginator","props","portionSize","pagesCount","Math","ceil","totalPageCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","e","filter","p","map","currentPage","selectedPage","pageNumber","onPageChanged"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC7B,GAAIC,CAAAA,WAAW,CAAG,EAAlB,CACI,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,cAAN,CAAuBL,KAAK,CAACM,QAAvC,CAAjB,CACA,GAAIC,CAAAA,KAAK,CAAG,EAAZ,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIN,UAArB,CAAiCM,CAAC,EAAlC,CAAsC,CAClC,GAAIA,CAAC,EAAIN,UAAT,CAAqB,CACjBK,KAAK,CAACE,IAAN,CAAWD,CAAX,EACH,CACJ,CAED,GAAIE,CAAAA,YAAY,CAAGP,IAAI,CAACC,IAAL,CAAUF,UAAU,CAACD,WAArB,CAAnB,CAVyB,cAWeJ,QAAQ,CAAC,CAAD,CAXvB,wCAWpBc,aAXoB,eAWLC,gBAXK,eAYzB,GAAIC,CAAAA,qBAAqB,CAAG,CAACF,aAAa,CAAG,CAAjB,EAAsBV,WAAtB,CAAoC,CAAhE,CACA,GAAIa,CAAAA,sBAAsB,CAAGH,aAAa,CAAGV,WAA7C,CAEA,mBAAO,2BAAK,SAAS,CAAEH,MAAM,CAACiB,SAAvB,EACFJ,aAAa,CAAG,CAAhB,eACD,8BAAQ,OAAO,CAAE,iBAACK,CAAD,CAAK,CAACJ,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAoC,CAA3D,SAFG,CAGFJ,KAAK,CACDU,MADJ,CACW,SAAAC,CAAC,QAAGA,CAAAA,CAAC,EAAIL,qBAAL,EAA8BK,CAAC,EAAIJ,sBAAtC,EADZ,EAEIK,GAFJ,CAEQ,SAAAD,CAAC,CAAI,CACV,mBAAO,4BAAM,SAAS,CAAElB,KAAK,CAACoB,WAAN,GAAsBF,CAAtB,CAA0BpB,MAAM,CAACuB,YAAjC,CAAgDvB,MAAM,CAACwB,UAAxE,CACM,OAAO,CAAE,iBAACN,CAAD,CAAO,CACZhB,KAAK,CAACuB,aAAN,CAAoBL,CAApB,EACH,CAHP,EAGUA,CAHV,CAAP,CAIH,CAPA,CAHE,CAWFR,YAAY,CAAGC,aAAf,eACD,8BAAQ,OAAO,CAAE,iBAACK,CAAD,CAAK,CAACJ,gBAAgB,CAACD,aAAa,CAAG,CAAjB,CAAhB,CAAoC,CAA3D,SAZG,CAAP,CAcH,CA7BD,CA+BA,cAAeZ,CAAAA,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport styles from './Paginator.module.css';\n\nconst Paginator = (props) => {\nlet portionSize = 10\n    let pagesCount = Math.ceil(props.totalPageCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        if (i <= pagesCount) {\n            pages.push(i)\n        }\n    }\n\n    let portionCount = Math.ceil(pagesCount/portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 &&\n        <button onClick={(e)=>{setPortionNumber(portionNumber - 1)}}>PREV</button>}\n        {pages\n            .filter(p=> p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map(p => {\n            return <span className={props.currentPage === p ? styles.selectedPage : styles.pageNumber}\n                         onClick={(e) => {\n                             props.onPageChanged(p)\n                         }}>{p}</span>\n        })}\n        {portionCount > portionNumber &&\n        <button onClick={(e)=>{setPortionNumber(portionNumber + 1)}}>NEXT</button>}\n    </div>\n}\n\nexport default Paginator;\n\n\n"]},"metadata":{},"sourceType":"module"}