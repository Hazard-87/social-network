{"ast":null,"code":"var _jsxFileName = \"/home/hazard/react/project/01-project/my-app/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { getProfile, getStatus, setUserProfile, updateStatus } from \"../../redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authorizesUserId;\n    }\n\n    this.props.getProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId != prevProps.match.params.userId) {\n      let userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = this.props.authorizesUserId;\n      }\n\n      this.props.getProfile(userId);\n      this.props.getStatus(userId);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizesUserId: state.auth.userId,\n  isAuth: state.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  setUserProfile,\n  getProfile,\n  getStatus,\n  updateStatus\n}), withRouter, withAuthRedirect)(ProfileContainer);","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","getProfile","getStatus","setUserProfile","updateStatus","connect","withRouter","withAuthRedirect","compose","ProfileContainer","Component","componentDidMount","userId","props","match","params","authorizesUserId","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,cAA/B,EAA+CC,YAA/C,QAAkE,4BAAlE;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;;AAGA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAG3CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACH;;AACD,SAAKH,KAAL,CAAWZ,UAAX,CAAsBW,MAAtB;AACA,SAAKC,KAAL,CAAWX,SAAX,CAAqBU,MAArB;AACH;;AACDK,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAI,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAxB,IAAkCM,SAAS,CAACJ,KAAV,CAAgBC,MAAhB,CAAuBH,MAA7D,EAAsE;AACtE,UAAIA,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,UAAI,CAACA,MAAL,EAAa;AACTA,QAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;AACH;;AACD,WAAKH,KAAL,CAAWZ,UAAX,CAAsBW,MAAtB;AACA,WAAKC,KAAL,CAAWX,SAAX,CAAqBU,MAArB;AACC;AACJ;;AAEDS,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,OAAD,oBAAa,KAAKR,KAAlB;AAAyB,MAAA,OAAO,EAAE,KAAKA,KAAL,CAAWS,OAA7C;AAAsD,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MAAzE;AACS,MAAA,YAAY,EAAE,KAAKV,KAAL,CAAWT,YADlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AAEH;;AAzB0C;;AA4B/C,IAAIoB,eAAe,GAAIC,KAAD,KAAY;AAC9BH,EAAAA,OAAO,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,OADG;AAE9BC,EAAAA,MAAM,EAAEE,KAAK,CAACC,WAAN,CAAkBH,MAFI;AAG9BP,EAAAA,gBAAgB,EAAES,KAAK,CAACE,IAAN,CAAWf,MAHC;AAI9BgB,EAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJW,CAAZ,CAAtB;;AAQA,eAAepB,OAAO,CAClBH,OAAO,CAACmB,eAAD,EAAkB;AAACrB,EAAAA,cAAD;AAAiBF,EAAAA,UAAjB;AAA6BC,EAAAA,SAA7B;AAAwCE,EAAAA;AAAxC,CAAlB,CADW,EAElBE,UAFkB,EAGlBC,gBAHkB,CAAP,CAIbE,gBAJa,CAAf","sourcesContent":["import React from 'react';\nimport Profile from \"./Profile\";\nimport {getProfile, getStatus, setUserProfile, updateStatus} from \"../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    \n\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizesUserId\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorizesUserId\n        }\n        this.props.getProfile(userId)\n        this.props.getStatus(userId)\n        }\n    }\n\n    render() {\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\n                        updateStatus={this.props.updateStatus}/>\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizesUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\n\nexport default compose(\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)"]},"metadata":{},"sourceType":"module"}