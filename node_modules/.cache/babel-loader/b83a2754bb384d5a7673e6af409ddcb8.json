{"ast":null,"code":"var _jsxFileName = \"/home/hazard/WebstormProjects/social-network/src/components/common/FormsControls/FormsControl.js\";\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst FormCon = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }\n  }, \" \", props.children);\n};\n\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    multiline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 29\n    }\n  }))));\n};\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 32\n    }\n  })));\n};\nexport const Check = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    })),\n    label: \"Remember me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 32\n    }\n  }));\n};\nexport const Checked = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 59\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 32\n    }\n  }));\n};\nexport const Pass = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  const hasError = props.meta.touched && props.meta.error;\n\n  if (hasError) {\n    return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n      id: \"standard-password-input\",\n      label: \"Password\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      defaultValue: \"Error\",\n      error: true,\n      inputProps: {\n        'aria-label': 'description'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 36\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n      id: \"standard-password-input\",\n      label: \"Password\",\n      type: \"password\",\n      autoComplete: \"current-password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 36\n      }\n    })));\n  }\n};\nexport const Log = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  const hasError = props.meta.touched && props.meta.error;\n\n  if (hasError) {\n    return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n      label: \"Email\",\n      id: \"standard-basic\",\n      defaultValue: \"Error\",\n      error: true,\n      inputProps: {\n        'aria-label': 'description'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n      label: \"Email\",\n      id: \"standard-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }\n    })));\n  }\n};","map":{"version":3,"sources":["/home/hazard/WebstormProjects/social-network/src/components/common/FormsControls/FormsControl.js"],"names":["React","TextField","Checkbox","FormControlLabel","FormCon","props","children","Textarea","input","meta","child","restProps","Input","Check","Checked","Pass","hasError","touched","error","Log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,KAAK,CAACC,QAAb,CAAP;AACH,CAFD;;AAIA,OAAO,MAAMC,QAAQ,GAAIF,KAAD,IAAW;AAC/B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAqCN,KAA3C;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoB,oBAAC,SAAD,oBAAgBG,KAAhB,EAA2BG,SAA3B;AACY,IAAA,SAAS,MADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB,CADG,CAAP;AAIH,CANM;AAOP,OAAO,MAAMC,KAAK,GAAIP,KAAD,IAAW;AAC5B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAqCN,KAA3C;AACA,sBAAO,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoB,oBAAC,SAAD,oBAAeG,KAAf,EAA0BG,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB,CAAP;AACH,CAHM;AAKP,OAAO,MAAME,KAAK,GAAIR,KAAD,IAAW;AAC5B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAqCN,KAA3C;AACA,sBAAO,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoB,oBAAC,gBAAD;AAAkB,IAAA,OAAO,eAChD,oBAAC,QAAD,oBAAcG,KAAd,EAAyBG,SAAzB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AAAmD,MAAA,UAAU,EAAE;AAAC,sBAAc;AAAf,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADuB;AAEkB,IAAA,KAAK,EAAC,aAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAAP;AAGH,CALM;AAMP,OAAO,MAAMG,OAAO,GAAIT,KAAD,IAAW;AAC9B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAqCN,KAA3C;AACA,sBAAO,oBAAC,OAAD,oBAAaA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoB,oBAAC,gBAAD;AAAkB,IAAA,OAAO,eAAE,oBAAC,QAAD,oBAAcG,KAAd,EAAyBG,SAAzB;AAAoC,MAAA,KAAK,EAAC,SAA1C;AACU,MAAA,UAAU,EAAE;AAAC,sBAAc;AAAf,OADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,CAAP;AAGH,CALM;AAOP,OAAO,MAAMI,IAAI,GAAIV,KAAD,IAAW;AAC3B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAqCN,KAA3C;AACA,QAAMW,QAAQ,GAAGX,KAAK,CAACI,IAAN,CAAWQ,OAAX,IAAsBZ,KAAK,CAACI,IAAN,CAAWS,KAAlD;;AACA,MAAIF,QAAJ,EAAc;AACV,wBAAO,oBAAC,OAAD,oBAAaX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB,oBAAC,SAAD,oBAAeG,KAAf,EAA0BG,SAA1B;AAAqC,MAAA,EAAE,EAAC,yBAAxC;AACW,MAAA,KAAK,EAAC,UADjB;AAC4B,MAAA,IAAI,EAAC,UADjC;AAC4C,MAAA,YAAY,EAAC,kBADzD;AAEW,MAAA,YAAY,EAAC,OAFxB;AAEgC,MAAA,KAAK,MAFrC;AAEsC,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB,CAAP;AAIH,GALD,MAKO;AACH,wBAAO,oBAAC,OAAD,oBAAaN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB,oBAAC,SAAD,oBAAeG,KAAf,EAA0BG,SAA1B;AAAqC,MAAA,EAAE,EAAC,yBAAxC;AACW,MAAA,KAAK,EAAC,UADjB;AAC4B,MAAA,IAAI,EAAC,UADjC;AAEW,MAAA,YAAY,EAAC,kBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB,CAAP;AAIH;AACJ,CAdM;AAiBP,OAAO,MAAMQ,GAAG,GAAId,KAAD,IAAW;AAC1B,QAAM;AAACG,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGC;AAAxB,MAAqCN,KAA3C;AACA,QAAMW,QAAQ,GAAGX,KAAK,CAACI,IAAN,CAAWQ,OAAX,IAAsBZ,KAAK,CAACI,IAAN,CAAWS,KAAlD;;AACA,MAAIF,QAAJ,EAAc;AACV,wBAAQ,oBAAC,OAAD,oBAAaX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB,oBAAC,SAAD,oBAAeG,KAAf,EAA0BG,SAA1B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAmD,MAAA,EAAE,EAAC,gBAAtD;AACO,MAAA,YAAY,EAAC,OADpB;AAC4B,MAAA,KAAK,MADjC;AACkC,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB,CAAR;AAGH,GAJD,MAIO;AACH,wBAAQ,oBAAC,OAAD,oBAAaN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAoB,oBAAC,SAAD,oBAAeG,KAAf,EAA0BG,SAA1B;AAAqC,MAAA,KAAK,EAAC,OAA3C;AAAmD,MAAA,EAAE,EAAC,gBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAApB,CAAR;AAEH;AACJ,CAXM","sourcesContent":["import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\n\nconst FormCon = (props) => {\n    return <div> {props.children}</div>\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <div>\n        <FormCon {...props}><TextField  {...input} {...restProps}\n                                        multiline/></FormCon>\n    </div>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><TextField {...input} {...restProps}/></FormCon>\n}\n\nexport const Check = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={\n        <Checkbox {...input} {...restProps} color=\"primary\"inputProps={{'aria-label': 'secondary checkbox'}}/>}\n                                                 label='Remember me'/></FormCon>\n}\nexport const Checked = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={<Checkbox {...input} {...restProps} color=\"primary\"\n                                                                    inputProps={{'aria-label': 'secondary checkbox'}}\n    />}/></FormCon>\n}\n\nexport const Pass = (props) => {\n    const {input, meta, child, ...restProps} = props\n    const hasError = props.meta.touched && props.meta.error\n    if (hasError) {\n        return <FormCon {...props}><TextField {...input} {...restProps} id=\"standard-password-input\"\n                                              label=\"Password\" type=\"password\" autoComplete=\"current-password\"\n                                              defaultValue=\"Error\" error inputProps={{ 'aria-label': 'description' }}\n        /></FormCon>\n    } else {\n        return <FormCon {...props}><TextField {...input} {...restProps} id=\"standard-password-input\"\n                                              label=\"Password\" type=\"password\"\n                                              autoComplete=\"current-password\"\n        /></FormCon>\n    }\n}\n\n\nexport const Log = (props) => {\n    const {input, meta, child, ...restProps} = props\n    const hasError = props.meta.touched && props.meta.error;\n    if (hasError) {\n        return  <FormCon {...props}><TextField {...input} {...restProps} label=\"Email\" id=\"standard-basic\"\n                                           defaultValue=\"Error\" error inputProps={{ 'aria-label': 'description' }}\n        /></FormCon>\n    } else {\n        return  <FormCon {...props}><TextField {...input} {...restProps} label=\"Email\" id=\"standard-basic\"\n        /></FormCon>\n    }\n}"]},"metadata":{},"sourceType":"module"}