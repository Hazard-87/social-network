{"ast":null,"code":"var _jsxFileName = \"/media/hazard/\\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0434\\u0438\\u0441\\u043A/react/project/react-deploy/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport * as form from \"redux-form\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validation/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst MyPosts = React.memo(props => {\n  let postElements = [...props.posts].reverse().map(post => /*#__PURE__*/React.createElement(Posts, {\n    message: post.post,\n    likesCount: post.likesCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 63\n    }\n  }));\n\n  let addNewPost = values => {\n    props.addPost(values.newPostBody);\n    values.newPostBody = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.myPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"My posts\"), /*#__PURE__*/React.createElement(MyPostsReduxForm, {\n    onSubmit: addNewPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, postElements));\n});\nconst maxLength = maxLengthCreator(15);\n\nlet MyPostsForm = props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '18ch'\n      }\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    component: Textarea,\n    name: 'newPostBody',\n    placeholder: 'Your post...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\n\nconst MyPostsReduxForm = reduxForm({\n  form: 'addPostForm'\n})(MyPostsForm);\nexport default MyPosts;","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","classes","Posts","form","Field","reduxForm","maxLengthCreator","required","Textarea","makeStyles","MyPosts","memo","props","postElements","posts","reverse","map","post","likesCount","addNewPost","values","addPost","newPostBody","myPosts","maxLength","MyPostsForm","useStyles","theme","root","margin","spacing","width","handleSubmit","MyPostsReduxForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,sCAAzC;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AAGA,MAAMC,OAAO,GAAGV,KAAK,CAACW,IAAN,CAAWC,KAAK,IAAI;AAChC,MAAIC,YAAY,GAAG,CAAC,GAAGD,KAAK,CAACE,KAAV,EAAiBC,OAAjB,GAA2BC,GAA3B,CAA+BC,IAAI,iBAAI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,IAAI,CAACA,IAArB;AAA2B,IAAA,UAAU,EAAEA,IAAI,CAACC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,CAAnB;;AAEA,MAAIC,UAAU,GAAIC,MAAD,IAAY;AACzBR,IAAAA,KAAK,CAACS,OAAN,CAAcD,MAAM,CAACE,WAArB;AACAF,IAAAA,MAAM,CAACE,WAAP,GAAqB,EAArB;AACH,GAHD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAErB,OAAO,CAACsB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEJ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACa,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,YADL,CALJ,CADJ;AAWH,CAlBe,CAAhB;AAoBA,MAAMW,SAAS,GAAGlB,gBAAgB,CAAC,EAAD,CAAlC;;AAEA,IAAImB,WAAW,GAAIb,KAAD,IAAW;AACzB,QAAMc,SAAS,GAAGjB,UAAU,CAAEkB,KAAD,KAAY;AACrCC,IAAAA,IAAI,EAAE;AACF,8BAAwB;AACpBC,QAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADY;AAEpBC,QAAAA,KAAK,EAAE;AAFa;AADtB;AAD+B,GAAZ,CAAD,CAA5B;AAQA,QAAM9B,OAAO,GAAGyB,SAAS,EAAzB;AAEA,sBACI;AAAM,IAAA,QAAQ,EAAEd,KAAK,CAACoB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAAC2B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEpB,QAAlB;AAA4B,IAAA,IAAI,EAAE,aAAlC;AACO,IAAA,WAAW,EAAE,cADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CALJ,CADJ;AAWH,CAtBD;;AAwBA,MAAMyB,gBAAgB,GAAG5B,SAAS,CAAC;AAACF,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAiCsB,WAAjC,CAAzB;AAEA,eAAef,OAAf","sourcesContent":["import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport * as form from \"redux-form\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\n\nconst MyPosts = React.memo(props => {\n    let postElements = [...props.posts].reverse().map(post => <Posts message={post.post} likesCount={post.likesCount}/>)\n\n    let addNewPost = (values) => {\n        props.addPost(values.newPostBody)\n        values.newPostBody = ''\n    }\n    return (\n        <div>\n            <div>\n                <h1 className={classes.myPosts}>My posts</h1>\n                <MyPostsReduxForm onSubmit={addNewPost}/>\n            </div>\n            <div className={classes.posts}>\n                {postElements}\n            </div>\n        </div>\n    )\n})\n\nconst maxLength = maxLengthCreator(15)\n\nlet MyPostsForm = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '18ch',\n            },\n        },\n    }));\n    const classes = useStyles()\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={classes.root}>\n                <Field component={Textarea} name={'newPostBody'}\n                       placeholder={'Your post...'} />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}