{"ast":null,"code":"var _jsxFileName = \"/home/hazard/WebstormProjects/social-network/src/hoc/withAuthRedirect.js\";\nimport { Redirect } from \"react-router-dom\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 43\n        }\n      });\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 20\n        }\n      }));\n    }\n\n  }\n\n  let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return AuthRedirectComponent;\n};","map":{"version":3,"sources":["/home/hazard/WebstormProjects/social-network/src/hoc/withAuthRedirect.js"],"names":["Redirect","React","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props","AuthRedirectComponent"],"mappings":";AAAA,SAAQA,QAAR,QAAuB,kBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAIA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC3C,QAAMC,iBAAN,SAAgCR,KAAK,CAACO,SAAtC,CAAgD;AAC5CE,IAAAA,MAAM,GAAG;AACL,UAAG,CAAC,KAAKC,KAAL,CAAWN,MAAf,EAAuB,oBAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACvB,0BAAO,oBAAE,SAAF,oBAAgB,KAAKM,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAJ2C;;AAOhD,MAAIC,qBAAqB,GAAGV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAA5B;AACA,SAAOG,qBAAP;AACH,CAVM","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to='/login'/>\n            return < Component {...this.props} />\n        }\n    }\n\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return AuthRedirectComponent\n}"]},"metadata":{},"sourceType":"module"}