{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _isEvent = _interopRequireDefault(require(\"./isEvent\"));\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, isReactNative) {\n  if ((0, _isEvent[\"default\"])(event)) {\n    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    if (isReactNative && event.nativeEvent !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    var detypedEvent = event;\n    var _detypedEvent$target = detypedEvent.target,\n        type = _detypedEvent$target.type,\n        value = _detypedEvent$target.value,\n        checked = _detypedEvent$target.checked,\n        files = _detypedEvent$target.files,\n        dataTransfer = detypedEvent.dataTransfer;\n\n    if (type === 'checkbox') {\n      return !!checked;\n    }\n\n    if (type === 'file') {\n      return files || dataTransfer && dataTransfer.files;\n    }\n\n    if (type === 'select-multiple') {\n      return getSelectedValues(event.target.options);\n    }\n\n    return value;\n  }\n\n  return event;\n};\n\nvar _default = getValue;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/hazard/react/project/react-deploy/node_modules/redux-form/lib/events/getValue.js"],"names":["_interopRequireDefault","require","exports","__esModule","_isEvent","getSelectedValues","options","result","index","length","option","selected","push","value","getValue","event","isReactNative","nativeEvent","text","undefined","detypedEvent","_detypedEvent$target","target","type","checked","files","dataTransfer","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,QAAQ,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAArC;;AAEA,IAAII,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,OAA3B,EAAoC;AAC1D,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAID,OAAJ,EAAa;AACX,SAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGF,OAAO,CAACG,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,UAAIE,MAAM,GAAGJ,OAAO,CAACE,KAAD,CAApB;;AAEA,UAAIE,MAAM,CAACC,QAAX,EAAqB;AACnBJ,QAAAA,MAAM,CAACK,IAAP,CAAYF,MAAM,CAACG,KAAnB;AACD;AACF;AACF;;AAED,SAAON,MAAP;AACD,CAdD;;AAgBA,IAAIO,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,aAAzB,EAAwC;AACrD,MAAI,CAAC,GAAGZ,QAAQ,CAAC,SAAD,CAAZ,EAAyBW,KAAzB,CAAJ,EAAqC;AACnC,QAAI,CAACC,aAAD,IAAkBD,KAAK,CAACE,WAAxB,IAAuCF,KAAK,CAACE,WAAN,CAAkBC,IAAlB,KAA2BC,SAAtE,EAAiF;AAC/E,aAAOJ,KAAK,CAACE,WAAN,CAAkBC,IAAzB;AACD;;AAED,QAAIF,aAAa,IAAID,KAAK,CAACE,WAAN,KAAsBE,SAA3C,EAAsD;AACpD,aAAOJ,KAAK,CAACE,WAAN,CAAkBC,IAAzB;AACD;;AAED,QAAIE,YAAY,GAAGL,KAAnB;AACA,QAAIM,oBAAoB,GAAGD,YAAY,CAACE,MAAxC;AAAA,QACIC,IAAI,GAAGF,oBAAoB,CAACE,IADhC;AAAA,QAEIV,KAAK,GAAGQ,oBAAoB,CAACR,KAFjC;AAAA,QAGIW,OAAO,GAAGH,oBAAoB,CAACG,OAHnC;AAAA,QAIIC,KAAK,GAAGJ,oBAAoB,CAACI,KAJjC;AAAA,QAKIC,YAAY,GAAGN,YAAY,CAACM,YALhC;;AAOA,QAAIH,IAAI,KAAK,UAAb,EAAyB;AACvB,aAAO,CAAC,CAACC,OAAT;AACD;;AAED,QAAID,IAAI,KAAK,MAAb,EAAqB;AACnB,aAAOE,KAAK,IAAIC,YAAY,IAAIA,YAAY,CAACD,KAA7C;AACD;;AAED,QAAIF,IAAI,KAAK,iBAAb,EAAgC;AAC9B,aAAOlB,iBAAiB,CAACU,KAAK,CAACO,MAAN,CAAahB,OAAd,CAAxB;AACD;;AAED,WAAOO,KAAP;AACD;;AAED,SAAOE,KAAP;AACD,CAlCD;;AAoCA,IAAIY,QAAQ,GAAGb,QAAf;AACAZ,OAAO,CAAC,SAAD,CAAP,GAAqByB,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _isEvent = _interopRequireDefault(require(\"./isEvent\"));\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, isReactNative) {\n  if ((0, _isEvent[\"default\"])(event)) {\n    if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    if (isReactNative && event.nativeEvent !== undefined) {\n      return event.nativeEvent.text;\n    }\n\n    var detypedEvent = event;\n    var _detypedEvent$target = detypedEvent.target,\n        type = _detypedEvent$target.type,\n        value = _detypedEvent$target.value,\n        checked = _detypedEvent$target.checked,\n        files = _detypedEvent$target.files,\n        dataTransfer = detypedEvent.dataTransfer;\n\n    if (type === 'checkbox') {\n      return !!checked;\n    }\n\n    if (type === 'file') {\n      return files || dataTransfer && dataTransfer.files;\n    }\n\n    if (type === 'select-multiple') {\n      return getSelectedValues(event.target.options);\n    }\n\n    return value;\n  }\n\n  return event;\n};\n\nvar _default = getValue;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}