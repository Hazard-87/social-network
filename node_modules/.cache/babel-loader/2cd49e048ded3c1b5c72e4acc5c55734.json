{"ast":null,"code":"var _jsxFileName = \"/home/hazard/react/project/01-project/my-app/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport { follow, requestUsers, requestMoreUsers, setCurrentPage, unfollow } from \"../../redux/usersReducer\";\nimport { compose } from \"redux\";\nimport { getUsers, getFollowingInProgress, getPageSize, getCurrentPage, getIsFetching, getTotalPageCount } from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.requestUsers(pageNumber, this.props.pageSize);\n    };\n\n    this.onMorePage = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.requestUsers(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.requestUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Users, {\n      totalPageCount: this.props.totalPageCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      users: this.props.users,\n      unfollow: this.props.unfollow,\n      follow: this.props.follow,\n      onPageChanged: this.onPageChanged,\n      isFetching: this.props.isFetching,\n      followingInProgress: this.props.followingInProgress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }\n    });\n  }\n\n} // let mapStateToProps = (state) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalPageCount: state.usersPage.totalPageCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\n\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalPageCount: getTotalPageCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose( // withAuthRedirect,\nconnect(mapStateToProps, {\n  follow,\n  unfollow,\n  setCurrentPage,\n  requestUsers\n}))(UsersContainer);","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/components/Users/UsersContainer.jsx"],"names":["React","connect","Users","follow","requestUsers","requestMoreUsers","setCurrentPage","unfollow","compose","getUsers","getFollowingInProgress","getPageSize","getCurrentPage","getIsFetching","getTotalPageCount","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","onMorePage","componentDidMount","currentPage","render","totalPageCount","users","isFetching","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACIC,MADJ,EACYC,YADZ,EAC0BC,gBAD1B,EAEIC,cAFJ,EAGIC,QAHJ,QAIO,0BAJP;AAKA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,QAAR,EAAkBC,sBAAlB,EAA0CC,WAA1C,EAAuDC,cAAvD,EAAuEC,aAAvE,EAAsFC,iBAAtF,QAA8G,6BAA9G;;AAGA,MAAMC,cAAN,SAA6Bf,KAAK,CAACgB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAKzCC,aALyC,GAKxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWb,cAAX,CAA0BY,UAA1B;AACA,WAAKC,KAAL,CAAWf,YAAX,CAAwBc,UAAxB,EAAoC,KAAKC,KAAL,CAAWC,QAA/C;AACH,KARwC;;AAAA,SASzCC,UATyC,GAS3BH,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWb,cAAX,CAA0BY,UAA1B;AACA,WAAKC,KAAL,CAAWf,YAAX,CAAwBc,UAAxB,EAAoC,KAAKC,KAAL,CAAWC,QAA/C;AACH,KAZwC;AAAA;;AACzCE,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,KAAL,CAAWf,YAAX,CAAwB,KAAKe,KAAL,CAAWI,WAAnC,EAAgD,KAAKJ,KAAL,CAAWC,QAA3D;AACH;;AAYDI,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,KAAD;AAAO,MAAA,cAAc,EAAE,KAAKL,KAAL,CAAWM,cAAlC;AACO,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,QAD5B;AAEO,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWI,WAF/B;AAGO,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWO,KAHzB;AAIO,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWZ,QAJ5B;AAKO,MAAA,MAAM,EAAE,KAAKY,KAAL,CAAWhB,MAL1B;AAMO,MAAA,aAAa,EAAE,KAAKc,aAN3B;AAOO,MAAA,UAAU,EAAE,KAAKE,KAAL,CAAWQ,UAP9B;AAQO,MAAA,mBAAmB,EAAE,KAAKR,KAAL,CAAWS,mBARvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAUH;;AA1BwC,C,CA6B7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHJ,IAAAA,KAAK,EAAEjB,QAAQ,CAACqB,KAAD,CADZ;AAEHV,IAAAA,QAAQ,EAAET,WAAW,CAACmB,KAAD,CAFlB;AAGHL,IAAAA,cAAc,EAAEX,iBAAiB,CAACgB,KAAD,CAH9B;AAIHP,IAAAA,WAAW,EAAEX,cAAc,CAACkB,KAAD,CAJxB;AAKHH,IAAAA,UAAU,EAAEd,aAAa,CAACiB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAAElB,sBAAsB,CAACoB,KAAD;AANxC,GAAP;AAQH,CATD;;AAWA,eAAetB,OAAO,EAClB;AACAP,OAAO,CAAC4B,eAAD,EAAkB;AAAC1B,EAAAA,MAAD;AAASI,EAAAA,QAAT;AAAmBD,EAAAA,cAAnB;AAAmCF,EAAAA;AAAnC,CAAlB,CAFW,CAAP,CAGbW,cAHa,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {\n    follow, requestUsers, requestMoreUsers,\n    setCurrentPage,\n    unfollow\n} from \"../../redux/usersReducer\";\nimport {compose} from \"redux\";\nimport {getUsers, getFollowingInProgress, getPageSize, getCurrentPage, getIsFetching, getTotalPageCount} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.requestUsers(pageNumber, this.props.pageSize)\n    }\n    onMorePage = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.requestUsers(pageNumber, this.props.pageSize)\n    }\n\n\n    render() {\n        return <Users totalPageCount={this.props.totalPageCount}\n                      pageSize={this.props.pageSize}\n                      currentPage={this.props.currentPage}\n                      users={this.props.users}\n                      unfollow={this.props.unfollow}\n                      follow={this.props.follow}\n                      onPageChanged={this.onPageChanged}\n                      isFetching={this.props.isFetching}\n                      followingInProgress={this.props.followingInProgress}\n        />\n    }\n}\n\n// let mapStateToProps = (state) => {\n//     return {\n//         users: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalPageCount: state.usersPage.totalPageCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress: state.usersPage.followingInProgress\n//     }\n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalPageCount: getTotalPageCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose (\n    // withAuthRedirect,\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, requestUsers})\n)(UsersContainer)\n"]},"metadata":{},"sourceType":"module"}