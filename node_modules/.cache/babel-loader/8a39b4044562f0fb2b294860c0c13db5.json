{"ast":null,"code":"import { usersAPI } from \"../api/api\";\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_MORE_USERS = 'SET_MORE_USERS';\nconst SET_СURRENT_PAGE = 'SET_СURRENT_PAGE';\nconst SET_TOTAL_PAGE_COUNT = 'SET_TOTAL_PAGE_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 8,\n  totalPageCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n      debugger;\n\n    case SET_MORE_USERS:\n      {\n        let user = action.users;\n        let stateUser = state.users;\n        let users = stateUser + user;\n        return { ...state,\n          users\n        }; // return {...state, users: action.users}\n      }\n\n    case SET_СURRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_PAGE_COUNT:\n      {\n        return { ...state,\n          totalPageCount: action.totalPageCount\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.userId] : state.followingInProgress.filter(id => id != action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const requestUsers = (currentPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(currentPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setUsers(data.items));\n    dispatch(setTotalPageCount(data.totalCount));\n  };\n};\nexport const requestMoreUsers = (nextPage, pageSize) => {\n  return async dispatch => {\n    dispatch(toggleIsFetching(true));\n    let data = await usersAPI.getUsers(nextPage, pageSize);\n    dispatch(toggleIsFetching(false));\n    dispatch(setMoreUsers(data.items));\n    dispatch(setTotalPageCount(data.totalCount));\n  };\n};\nexport const follow = userId => {\n  return async dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await usersAPI.getFollow(userId);\n\n    if (data.resultCode == 0) {\n      dispatch(followAccept(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let data = await usersAPI.getUnfollow(userId);\n\n    if (data.resultCode == 0) {\n      dispatch(unfollowAccept(userId));\n    }\n\n    dispatch(toggleFollowingProgress(false, userId));\n  };\n};\nexport const followAccept = userId => ({\n  type: 'FOLLOW',\n  userId\n});\nexport const unfollowAccept = userId => ({\n  type: 'UNFOLLOW',\n  userId\n});\nexport const setUsers = users => ({\n  type: 'SET_USERS',\n  users\n});\nexport const setMoreUsers = users => ({\n  type: 'SET_MORE_USERS',\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: 'SET_СURRENT_PAGE',\n  currentPage\n});\nexport const setTotalPageCount = totalPageCount => ({\n  type: 'SET_TOTAL_PAGE_COUNT',\n  totalPageCount\n});\nexport const toggleIsFetching = isFetching => ({\n  type: 'TOGGLE_IS_FETCHING',\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n  type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n  isFetching,\n  userId\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/redux/usersReducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","SET_MORE_USERS","SET_СURRENT_PAGE","SET_TOTAL_PAGE_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalPageCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","user","stateUser","filter","requestUsers","dispatch","toggleIsFetching","data","getUsers","setUsers","items","setTotalPageCount","totalCount","requestMoreUsers","nextPage","setMoreUsers","follow","toggleFollowingProgress","getFollow","resultCode","followAccept","unfollow","getUnfollow","unfollowAccept","setCurrentPage"],"mappings":"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","sourcesContent":["import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SET_USERS = 'SET_USERS'\nconst SET_MORE_USERS = 'SET_MORE_USERS'\nconst SET_СURRENT_PAGE = 'SET_СURRENT_PAGE'\nconst SET_TOTAL_PAGE_COUNT = 'SET_TOTAL_PAGE_COUNT'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\nlet initialState = {\n    users: [],\n    pageSize: 8,\n    totalPageCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW :\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                    return u\n                })\n            }\n\n        case UNFOLLOW :\n            return {\n                ...state,\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u\n                })\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        debugger\n        case SET_MORE_USERS: {\n            let user = action.users\n            let stateUser = state.users\n            let users = stateUser + user\n            return {...state, users}\n\n            // return {...state, users: action.users}\n        }\n        case SET_СURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_PAGE_COUNT: {\n            return {...state, totalPageCount: action.totalPageCount}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const requestUsers = (currentPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let data = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(data.items))\n        dispatch(setTotalPageCount(data.totalCount))\n    }\n}\n\nexport const requestMoreUsers = (nextPage, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true))\n        let data = await usersAPI.getUsers(nextPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setMoreUsers(data.items))\n        dispatch(setTotalPageCount(data.totalCount))\n    }\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n        let data = await usersAPI.getFollow(userId)\n        if (data.resultCode == 0) {\n            dispatch(followAccept(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        dispatch(toggleFollowingProgress(true, userId))\n       let data = await usersAPI.getUnfollow(userId)\n            if (data.resultCode == 0) {\n                dispatch(unfollowAccept(userId))\n            }\n            dispatch(toggleFollowingProgress(false, userId))\n    }\n}\n\nexport const followAccept = (userId) => ({type: 'FOLLOW', userId})\nexport const unfollowAccept = (userId) => ({type: 'UNFOLLOW', userId})\nexport const setUsers = (users) => ({type: 'SET_USERS', users})\nexport const setMoreUsers = (users) => ({type: 'SET_MORE_USERS', users})\nexport const setCurrentPage = (currentPage) => ({type: 'SET_СURRENT_PAGE', currentPage})\nexport const setTotalPageCount = (totalPageCount) => ({type: 'SET_TOTAL_PAGE_COUNT', totalPageCount})\nexport const toggleIsFetching = (isFetching) => ({type: 'TOGGLE_IS_FETCHING', isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\n    isFetching,\n    userId\n})\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}