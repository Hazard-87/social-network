{"ast":null,"code":"var _jsxFileName = \"/home/hazard/react/project/01-project/my-app/src/components/Profile/MyPosts/MyPosts.jsx\";\nimport React from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validation/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControl\";\nimport * as form from \"redux-form\";\n\nconst MyPosts = props => {\n  shouldComponentUpdate(nextProps, nextState);\n  let postElements = props.posts.map(post => /*#__PURE__*/React.createElement(Posts, {\n    message: post.post,\n    likesCount: post.likesCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 48\n    }\n  }));\n\n  let addNewPost = values => {\n    props.addPost(values.newPostBody);\n    values.newPostBody = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: classes.myPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"My posts\"), /*#__PURE__*/React.createElement(MyPostsReduxForm, {\n    onSubmit: addNewPost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, postElements));\n};\n\nconst maxLength = maxLengthCreator(15);\n\nlet MyPostsForm = props => {\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: classes.newPost,\n    component: Textarea,\n    name: 'newPostBody',\n    placeholder: 'Your post...',\n    validate: [required, maxLength],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.send,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Send\")));\n};\n\nconst MyPostsReduxForm = reduxForm({\n  form: 'addPostForm'\n})(MyPostsForm);\nexport default MyPosts;","map":{"version":3,"sources":["/home/hazard/react/project/01-project/my-app/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","classes","Posts","Field","reduxForm","maxLengthCreator","required","Textarea","form","MyPosts","props","shouldComponentUpdate","nextProps","nextState","postElements","posts","map","post","likesCount","addNewPost","values","addPost","newPostBody","myPosts","maxLength","MyPostsForm","handleSubmit","newPost","send","MyPostsReduxForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,KAAR,EAAeC,SAAf,QAA+B,YAA/B;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,sCAAzC;AACA,SAAQC,QAAR,QAAuB,yCAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,YAAtB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvBC,EAAAA,qBAAqB,CAACC,SAAD,EAAWC,SAAX,CAArB;AAEA,MAAIC,YAAY,GAAGJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,iBAAI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,IAAI,CAACA,IAArB;AAA2B,IAAA,UAAU,EAAEA,IAAI,CAACC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAnB;;AAEA,MAAIC,UAAU,GAAIC,MAAD,IAAY;AACzBV,IAAAA,KAAK,CAACW,OAAN,CAAcD,MAAM,CAACE,WAArB;AACAF,IAAAA,MAAM,CAACE,WAAP,GAAqB,EAArB;AACH,GAHD;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAErB,OAAO,CAACsB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEJ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAKI;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACc,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,YADL,CALJ,CADJ;AAWH,CArBD;;AAuBA,MAAMU,SAAS,GAAGnB,gBAAgB,CAAC,EAAD,CAAlC;;AAEA,IAAIoB,WAAW,GAAIf,KAAD,IAAW;AACzB,sBACI;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACgB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEzB,OAAO,CAAC0B,OAA1B;AAAmC,IAAA,SAAS,EAAEpB,QAA9C;AAAwD,IAAA,IAAI,EAAE,aAA9D;AACO,IAAA,WAAW,EAAE,cADpB;AACoC,IAAA,QAAQ,EAAE,CAACD,QAAD,EAAWkB,SAAX,CAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,SAAS,EAAEvB,OAAO,CAAC2B,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CALJ,CADJ;AAWH,CAZD;;AAcA,MAAMC,gBAAgB,GAAGzB,SAAS,CAAC;AAACI,EAAAA,IAAI,EAAE;AAAP,CAAD,CAAT,CAAiCiB,WAAjC,CAAzB;AAEA,eAAehB,OAAf","sourcesContent":["import React from 'react';\nimport classes from './MyPosts.module.css';\nimport Posts from \"../Posts/Posts\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\nimport * as form from \"redux-form\";\n\nconst MyPosts = (props) => {\n\n    shouldComponentUpdate(nextProps,nextState) \n\n    let postElements = props.posts.map(post => <Posts message={post.post} likesCount={post.likesCount}/>)\n\n    let addNewPost = (values) => {\n        props.addPost(values.newPostBody)\n        values.newPostBody = ''\n    }\n    return (\n        <div>\n            <div>\n                <h1 className={classes.myPosts}>My posts</h1>\n                <MyPostsReduxForm onSubmit={addNewPost}/>\n            </div>\n            <div className={classes.posts}>\n                {postElements}\n            </div>\n        </div>\n    )\n}\n\nconst maxLength = maxLengthCreator(15)\n\nlet MyPostsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={classes.newPost} component={Textarea} name={'newPostBody'}\n                       placeholder={'Your post...'} validate={[required, maxLength]}/>\n            </div>\n            <div>\n                <button className={classes.send}>Send</button>\n            </div>\n        </form>\n    )\n}\n\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}