{"ast":null,"code":"var _jsxFileName = \"/media/hazard/\\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0434\\u0438\\u0441\\u043A/react/project/react-deploy/src/components/common/Paginator/Paginator.jsx\";\nimport React, { useState } from \"react\";\nimport styles from './Paginator.module.css';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nexport const Paginator = props => {\n  let portionSize = 10;\n  let pagesCount = Math.ceil(props.totalPageCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    if (i <= pagesCount) {\n      pages.push(i);\n    }\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  let rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paginator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map(p => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: props.currentPage === p ? styles.selectedPage : styles.pageNumber,\n      onClick: e => {\n        props.onPageChanged(p);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(Button, {\n    onClick: e => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\nexport const PaginationOutlined = props => {\n  const classes = useStyles();\n  let portionSize = props.totalPageCount; // let pagesCount = Math.ceil(props.totalPageCount / props.pageSize)\n  // let pages = []\n  // for (let i = 1; i <= pagesCount; i++) {\n  //     if (i <= pagesCount) {\n  //         pages.push(i)\n  //     }\n  // }\n  //\n  // let portionCount = Math.ceil(pagesCount/portionSize)\n  // let [portionNumber, setPortionNumber] = useState(1)\n  // let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n  // let rightPortionPageNumber = portionNumber * portionSize\n\n  const [page, setPage] = React.useState(1);\n\n  const handleChange = (event, value) => {\n    console.log(value);\n    setPage(value);\n    props.onPageChanged(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    page: page,\n    onChange: handleChange,\n    color: \"primary\",\n    count: 20,\n    defaultPage: 6,\n    boundaryCount: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","styles","Button","makeStyles","Pagination","Paginator","props","portionSize","pagesCount","Math","ceil","totalPageCount","pageSize","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","e","filter","p","map","currentPage","selectedPage","pageNumber","onPageChanged","useStyles","theme","root","marginTop","spacing","PaginationOutlined","classes","page","setPage","handleChange","event","value","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport styles from './Paginator.module.css';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\n\n\nexport const Paginator = (props) => {\n\nlet portionSize = 10\n    let pagesCount = Math.ceil(props.totalPageCount / props.pageSize)\n    let pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        if (i <= pagesCount) {\n            pages.push(i)\n        }\n    }\n\n    let portionCount = Math.ceil(pagesCount/portionSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    let rightPortionPageNumber = portionNumber * portionSize\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 &&\n        <Button onClick={(e)=>{setPortionNumber(portionNumber - 1)}}>PREV</Button>}\n        {pages\n            .filter(p=> p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map(p => {\n            return <span className={props.currentPage === p ? styles.selectedPage : styles.pageNumber}\n                         onClick={(e) => {\n                             props.onPageChanged(p)\n                         }}>{p}</span>\n        })}\n        {portionCount > portionNumber &&\n        <Button onClick={(e)=>{setPortionNumber(portionNumber + 1)}}>NEXT</Button>}\n    </div>\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n\nexport const PaginationOutlined = (props) => {\n    const classes = useStyles();\n\n    let portionSize = props.totalPageCount\n    // let pagesCount = Math.ceil(props.totalPageCount / props.pageSize)\n    // let pages = []\n    // for (let i = 1; i <= pagesCount; i++) {\n    //     if (i <= pagesCount) {\n    //         pages.push(i)\n    //     }\n    // }\n    //\n    // let portionCount = Math.ceil(pagesCount/portionSize)\n    // let [portionNumber, setPortionNumber] = useState(1)\n    // let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\n    // let rightPortionPageNumber = portionNumber * portionSize\n\n    const [page, setPage] = React.useState(1);\n    const handleChange = (event, value) => {\n        console.log(value)\n        setPage(value)\n        props.onPageChanged(value)\n    };\n\n    return (\n        <div className={classes.root}>\n            <Pagination page={page} onChange={handleChange} color=\"primary\"\n                        count={20} defaultPage={6} boundaryCount={1} />\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}