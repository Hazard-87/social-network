{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      {\n        return { ...state,\n          initialized: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: 'INITIALIZED_SUCCESS'\n});\nexport const initializeApp = () => dispatch => {\n  Promise.all([dispatch(getAuthUserData())]).then(() => {// dispatch(initializedSuccess())\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/home/hazard/react/project/react-deploy/src/redux/app-reducer.js"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","Promise","all","then"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AAA0B;AACtB,eAAO,EACH,GAAGI,KADA;AAEHF,UAAAA,WAAW,EAAE;AAFV,SAAP;AAIH;;AACD;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAaA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAE;AAAP,CAAP,CAA3B;AAEP,OAAO,MAAME,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,QAAQ,CAACV,eAAe,EAAhB,CAAT,CAAZ,EAA2Ca,IAA3C,CAAgD,MAAM,CACnD;AACF,GAFD;AAGH,CAJM;AAMP,eAAeT,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: 'INITIALIZED_SUCCESS',})\n\nexport const initializeApp = () => (dispatch) => {\n    Promise.all([dispatch(getAuthUserData())]).then(() => {\n       // dispatch(initializedSuccess())\n    })\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}