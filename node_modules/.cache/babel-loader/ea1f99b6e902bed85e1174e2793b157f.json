{"ast":null,"code":"var _jsxFileName = \"/media/hazard/\\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0434\\u0438\\u0441\\u043A/react/project/react-deploy/src/components/common/FormsControls/FormsControl.js\";\nimport React from \"react\";\nimport styles from './FormsControl.module.css';\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport clsx from \"clsx\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst FormCon = props => {\n  const hasError = props.meta.touched && props.meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, props.children), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 26\n    }\n  }, \" \", props.meta.error, \" \"));\n};\n\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    multiline: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }))));\n};\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }\n  })));\n};\nexport const Check = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 59\n      }\n    })),\n    label: \"Remember me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }));\n};\nexport const Checked = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n      color: \"primary\",\n      inputProps: {\n        'aria-label': 'secondary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 59\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 32\n    }\n  }));\n};\nexport const Pass = props => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    withoutLabel: {\n      marginTop: theme.spacing(3)\n    },\n    textField: {\n      width: '25ch'\n    }\n  }));\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value\n    });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(FormCon, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: clsx(classes.margin, classes.textField),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"standard-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, Object.assign({}, props, {\n    id: \"standard-adornment-password\",\n    type: values.showPassword ? 'text' : 'password',\n    value: values.password,\n    onChange: handleChange('password'),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: handleClickShowPassword,\n      onMouseDown: handleMouseDownPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, values.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 48\n      }\n    }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 64\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })))); // <FormControl {...props}><TextField {...input} {...restProps}\n  //                                           variant=\"outlined\"/></FormControl>\n};","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/components/common/FormsControls/FormsControl.js"],"names":["React","styles","TextField","Checkbox","FormControlLabel","FormControl","InputLabel","InputAdornment","IconButton","clsx","Visibility","VisibilityOff","makeStyles","FormCon","props","hasError","meta","touched","error","formControl","children","Textarea","input","child","restProps","Input","Check","Checked","Pass","useStyles","theme","root","display","flexWrap","margin","spacing","withoutLabel","marginTop","textField","width","classes","values","setValues","useState","amount","password","weight","weightRange","showPassword","handleChange","prop","event","target","value","handleClickShowPassword","handleMouseDownPassword","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from './FormsControl.module.css'\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport clsx from \"clsx\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst FormCon = (props) => {\n    const hasError = props.meta.touched && props.meta.error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span> {props.meta.error} </span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <div>\n        <FormCon {...props}><TextField  {...input} {...restProps}\n                                             multiline variant=\"outlined\"/></FormCon>\n\n    </div>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><TextField {...input} {...restProps}\n                                               variant=\"outlined\"/></FormCon>\n}\n\nexport const Check = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={<Checkbox {...input} {...restProps} color=\"primary\"\n                                                                         inputProps={{'aria-label': 'secondary checkbox'}}\n    />} label='Remember me'/></FormCon>\n}\nexport const Checked = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormCon {...props}><FormControlLabel control={<Checkbox {...input} {...restProps} color=\"primary\"\n                                                                         inputProps={{'aria-label': 'secondary checkbox'}}\n    />}/></FormCon>\n}\n\n\nexport const Pass = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        margin: {\n            margin: theme.spacing(1),\n        },\n        withoutLabel: {\n            marginTop: theme.spacing(3),\n        },\n        textField: {\n            width: '25ch',\n        },\n    }));\n\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return <FormCon {...props} ><FormControl className={clsx(classes.margin, classes.textField)} >\n        <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n        <Input\n            {...props}\n            id=\"standard-adornment-password\"\n            type={values.showPassword ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange('password')}\n            endAdornment={\n                <InputAdornment position=\"end\">\n                    <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                    >\n                        {values.showPassword ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </InputAdornment>\n            }\n        />\n    </FormControl>\n    </FormCon>\n\n    // <FormControl {...props}><TextField {...input} {...restProps}\n    //                                           variant=\"outlined\"/></FormControl>\n}"]},"metadata":{},"sourceType":"module"}