{"ast":null,"code":"import _objectSpread from\"/media/hazard/\\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0434\\u0438\\u0441\\u043A/react/project/react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getAuthUserData}from\"./auth-reducer\";var INITIALIZED_SUCCESS='INITIALIZED_SUCCESS';var initialState={initialized:false};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case INITIALIZED_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{initialized:true});}default:return state;}};export var initializedSuccess=function initializedSuccess(){return{type:'INITIALIZED_SUCCESS'};};export var initializeApp=function initializeApp(){return function(dispatch){Promise.all([dispatch(getAuthUserData())]).then(function(){dispatch(initializedSuccess());});};};export default appReducer;","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/redux/app-reducer.js"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","Promise","all","then"],"mappings":"8OAAA,OAAQA,eAAR,KAA8B,gBAA9B,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,qBAA5B,CAEA,GAAIC,CAAAA,YAAY,CAAG,CACfC,WAAW,CAAE,KADE,CAAnB,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACjD,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,mBAAL,CAA0B,CACtB,sCACOI,KADP,MAEIF,WAAW,CAAE,IAFjB,GAIH,CACD,QACI,MAAOE,CAAAA,KAAP,CARR,CAUH,CAXD,CAaA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,SAAO,CAACD,IAAI,CAAE,qBAAP,CAAP,EAA3B,CAEP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAc,CAC7CC,OAAO,CAACC,GAAR,CAAY,CAACF,QAAQ,CAACV,eAAe,EAAhB,CAAT,CAAZ,EAA2Ca,IAA3C,CAAgD,UAAM,CACnDH,QAAQ,CAACF,kBAAkB,EAAnB,CAAR,CACF,CAFD,EAGH,CAJ4B,EAAtB,CAMP,cAAeJ,CAAAA,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS: {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: 'INITIALIZED_SUCCESS'})\n\nexport const initializeApp = () => (dispatch) => {\n    Promise.all([dispatch(getAuthUserData())]).then(() => {\n       dispatch(initializedSuccess())\n    })\n}\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}