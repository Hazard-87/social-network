{"ast":null,"code":"var _jsxFileName = \"/media/hazard/\\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0434\\u0438\\u0441\\u043A/react/project/react-deploy/src/components/common/FormsControls/FormsControl.js\";\nimport React from \"react\";\nimport styles from './FormsControl.module.css';\nimport TextField from \"@material-ui/core/TextField\";\n\nconst FormControl = ({\n  input,\n  meta,\n  child,\n  ...props\n}) => {\n  const hasError = meta.touched && meta.error;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.formControl + \" \" + (hasError ? styles.error : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, props.children), hasError && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 26\n    }\n  }, \" \", meta.error, \" \"));\n};\n\nexport const Textarea = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    multiline: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 33\n    }\n  }))));\n};\nexport const Input = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(TextField, Object.assign({}, input, restProps, {\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 36\n    }\n  })));\n};\nexport const Checkbox = props => {\n  const {\n    input,\n    meta,\n    child,\n    ...restProps\n  } = props;\n  return /*#__PURE__*/React.createElement(FormControl, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, Object.assign({}, input, restProps, {\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }\n  })));\n};","map":{"version":3,"sources":["/media/hazard/Локальный диск/react/project/react-deploy/src/components/common/FormsControls/FormsControl.js"],"names":["React","styles","TextField","FormControl","input","meta","child","props","hasError","touched","error","formControl","children","Textarea","restProps","Input","Checkbox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,KAAd;AAAqB,KAAGC;AAAxB,CAAD,KAAoC;AACpD,QAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACK,KAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,WAAP,GAAqB,GAArB,IAA4BH,QAAQ,GAAGP,MAAM,CAACS,KAAV,GAAkB,EAAtD,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACK,QADX,CADJ,EAIKJ,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQH,IAAI,CAACK,KAAb,MAJjB,CADJ;AAQH,CAVD;;AAYA,OAAO,MAAMG,QAAQ,GAAIN,KAAD,IAAW;AAC/B,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGQ;AAAxB,MAAqCP,KAA3C;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB,oBAAC,SAAD,oBAAgBH,KAAhB,EAA2BU,SAA3B;AACY,IAAA,SAAS,MADrB;AACsB,IAAA,OAAO,EAAC,UAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CADG,CAAP;AAKH,CAPM;AAQP,OAAO,MAAMC,KAAK,GAAIR,KAAD,IAAW;AAC5B,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGQ;AAAxB,MAAqCP,KAA3C;AACA,sBAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB,oBAAC,SAAD,oBAAeH,KAAf,EAA0BU,SAA1B;AACW,IAAA,OAAO,EAAC,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAP;AAEH,CAJM;AAMP,OAAO,MAAME,QAAQ,GAAIT,KAAD,IAAW;AAC/B,QAAM;AAACH,IAAAA,KAAD;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqB,OAAGQ;AAAxB,MAAqCP,KAA3C;AACA,sBAAO,oBAAC,WAAD,oBAAiBA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB,oBAAC,QAAD,oBAAcH,KAAd,EAAyBU,SAAzB;AACU,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAxB,CAAP;AAGH,CALM","sourcesContent":["import React from \"react\";\nimport styles from './FormsControl.module.css'\nimport TextField from \"@material-ui/core/TextField\";\n\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span> {meta.error} </span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <div>\n        <FormControl {...props}><TextField  {...input} {...restProps}\n                                            multiline variant=\"outlined\"/></FormControl>\n\n    </div>\n}\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}><TextField {...input} {...restProps}\n                                              variant=\"outlined\"/></FormControl>\n}\n\nexport const Checkbox = (props) => {\n    const {input, meta, child, ...restProps} = props\n    return <FormControl {...props}><Checkbox {...input} {...restProps}\n                                             inputProps={{ 'aria-label': 'primary checkbox' }}\n                                              /></FormControl>\n}\n\n"]},"metadata":{},"sourceType":"module"}