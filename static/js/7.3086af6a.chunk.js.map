{"version":3,"sources":["components/Users/Users.module.css","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalPageCount","pageSize","currentPage","onPageChanged","useState","page","setPage","size","setSize","onChange","handleChange","current","defaultCurrent","total","Meta","Card","Users","props","p","isFetching","className","classes","preloader","Preloader","container","users","map","user","key","id","hide","followed","disabled","followingInProgress","some","onClick","unfollow","follow","to","hoverable","style","width","cover","photos","large","src","shape","icon","UserOutlined","title","name","description","status","more","e","onMorePage","getUsers","createSelector","state","usersPage","filter","u","getPageSize","getTotalPageCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","setCurrentPage","setPageSize","requestUsers","nextPage","requestMoreUsers","this","React","Component","compose","connect"],"mappings":"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","file":"static/js/7.3086af6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Users_container__2JdCb\",\"paginator\":\"Users_paginator__3jpI0\",\"more\":\"Users_more__1pLKv\",\"status\":\"Users_status__18qIx\",\"follow\":\"Users_follow__c4AA0\",\"unfollow\":\"Users_unfollow__u2UfO\",\"hide\":\"Users_hide__3BlRo\"};","import React, {useState} from \"react\";\r\nimport {Pagination} from 'antd';\r\n\r\nconst Paginator = ({totalPageCount, pageSize, currentPage, onPageChanged}) => {\r\n    const [page, setPage] = useState(currentPage);\r\n    const [size, setSize] = useState(pageSize);\r\n\r\n    const handleChange = (page, size) => {\r\n        setPage(page)\r\n        setSize(size)\r\n        onPageChanged(page, size)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Pagination\r\n                onChange={(page, size) => {\r\n                    handleChange(page, size)\r\n                }}\r\n                pageSize={size}\r\n                current={page}\r\n                defaultCurrent={6} total={totalPageCount}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './Users.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {Avatar, Button} from 'antd';\r\nimport {UserOutlined} from '@ant-design/icons';\r\n\r\nimport {Card} from 'antd';\r\n\r\nconst {Meta} = Card;\r\n\r\nlet Users = (props) => {\r\n    let p = props.currentPage + 1\r\n\r\n    return <div>\r\n        <Paginator totalPageCount={props.totalPageCount} pageSize={props.pageSize}\r\n                   currentPage={props.currentPage} onPageChanged={props.onPageChanged}/>\r\n        {props.isFetching && <div className={classes.preloader}><Preloader/></div>}\r\n        <div className={classes.container}>\r\n            {props.users.map(user =>\r\n                    <div key={user.id}>\r\n            <span className={props.isFetching ? classes.hide : classes.user}>\r\n                <div>\r\n                {user.followed\r\n                    ? <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.unfollow(user.id)\r\n                    }} className={classes.unfollow}>unfollow</button>\r\n                    : <button disabled={props.followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                        props.follow(user.id)\r\n                    }} className={classes.follow}>follow</button>\r\n                }\r\n                </div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <Card\r\n                        hoverable\r\n                        style={{width: 240}}\r\n                        cover={user.photos.large != null ?\r\n                            <img src={user.photos.large}/> :\r\n                            <Avatar shape=\"square\" size={240} icon={<UserOutlined/>}/>}>\r\n                        <Meta title={user.name} description={user.status}/>\r\n                    </Card>\r\n                </NavLink>\r\n                </span>\r\n            </div>\r\n            )\r\n            }\r\n        </div>\r\n        <Button className={classes.more} onClick={(e) => {\r\n            props.onMorePage(p)\r\n        }}>Show more\r\n        </Button>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalPageCount = (state) => {\r\n    return state.usersPage.totalPageCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    follow, requestUsers, requestMoreUsers,\r\n    setCurrentPage,\r\n    unfollow, setPageSize\r\n} from \"../../redux/usersReducer\";\r\nimport {compose} from \"redux\";\r\nimport {getUsers, getFollowingInProgress, getPageSize, getCurrentPage, getIsFetching, getTotalPageCount} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber, pageSize) => {\r\n        this.props.setCurrentPage(pageNumber)\r\n        this.props.setPageSize(pageSize)\r\n        this.props.requestUsers(pageNumber, pageSize)\r\n    }\r\n    onMorePage = (nextPage) => {\r\n        this.props.setCurrentPage(nextPage)\r\n        this.props.requestMoreUsers(nextPage, this.props.pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Users totalPageCount={this.props.totalPageCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      users={this.props.users}\r\n                      unfollow={this.props.unfollow}\r\n                      follow={this.props.follow}\r\n                      onPageChanged={this.onPageChanged}\r\n                      isFetching={this.props.isFetching}\r\n                      followingInProgress={this.props.followingInProgress}\r\n                      onMorePage={this.onMorePage}\r\n        />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalPageCount: getTotalPageCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, setPageSize, requestUsers, requestMoreUsers})\r\n)(UsersContainer)\r\n"],"sourceRoot":""}