{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyProfile/MyProfile.module.css","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Posts/Posts.module.css","assets/images/user.png","components/Profile/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyProfile/ProfileStatusWithHooks.jsx","components/Profile/MyProfile/ProfileDataForm.jsx","components/Profile/MyProfile/MyProfile.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Posts","createRef","className","classes","post","item","src","message","like","likesCount","onClick","MyPosts","memo","postElements","posts","reverse","map","index","key","MyPostsReduxForm","onSubmit","values","addPost","newPostBody","styles","reduxForm","form","handleSubmit","field","Field","component","Textarea","name","MyPostsContainer","profilePage","dispatch","addPostAC","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","input","Input","type","keys","profile","contacts","placeholder","error","formSummaryError","button","ProfileData","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact","href","MyProfile","photos","Preloader","content","avatar","large","userPhoto","isOwner","root","accept","files","savePhoto","fullName","initialValues","formData","saveProfile","then","Profile","editmode","ProfileContainer","userId","match","params","authorizesUserId","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.1c2d0f15.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return < Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return AuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"MyProfile_avatar__1lRxT\",\"status\":\"MyProfile_status__2Yej1\",\"contact\":\"MyProfile_contact__2Knu4\"};","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1I3mh\",\"newPost\":\"MyPosts_newPost__3roly\",\"send\":\"MyPosts_send__3EjLO\",\"posts\":\"MyPosts_posts__2NF7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2WbMo\",\"like\":\"Posts_like__1kMoZ\",\"newComment\":\"Posts_newComment__1KoNN\",\"send\":\"Posts_send__20WxY\",\"post\":\"Posts_post__29zt5\"};","module.exports = __webpack_public_path__ + \"static/media/user.4b0cb4ba.png\";","import React from 'react';\r\nimport classes from './Posts.module.css';\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    let newCreatePost = React.createRef()\r\n\r\n    let newComment = ()=> {\r\n        // let post = newCreatePost.current.value\r\n        // newCreatePost.current.value = ''\r\n    }\r\n\r\n  return (\r\n      <div className={classes.post}>\r\n      <div className={classes.item}>\r\n          <img src='https://www.meme-arsenal.com/memes/ae1d44253a861f53d95864dd37c55a78.jpg'/> {props.message}\r\n      </div>\r\n          <div className={classes.like}>\r\n              <img src='https://img.icons8.com/cotton/2x/facebook-like.png' />\r\n              {props.likesCount}\r\n          </div>\r\n          <div>\r\n              <textarea />\r\n          </div>\r\n              <div>\r\n                  <button onClick={newComment}>send\r\n                  </button>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Posts from \"../Posts/Posts\";\r\nimport * as form from \"redux-form\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = [...props.posts].reverse().map((post, index) => <Posts key={index} message={post.post} likesCount={post.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n        values.newPostBody = ''\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>\r\n                <MyPostsReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={styles.field}>\r\n                <Field component={Textarea} name={'newPostBody'}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={props.handleSubmit}>\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts : state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostAC(newPostBody))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\r\nimport styles from './MyProfile.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n            setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.status}>\r\n            {editMode\r\n                ? <div><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                : <div><span onClick={activateEditMode}>{props.status || '-----'}</span></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport classes from './MyProfile.module.css'\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><b> Full name: <Field className={classes.input} component={Input} name={'fullName'} type='input'/></b></div>\r\n        <div><b>looking for a job</b>: <Field  component={Input} name={'lookingForAJob'} type='checkbox'/></div>\r\n        <div><b>My professional skills</b>: <Field className={classes.field} component={Textarea}\r\n                                                   name={'lookingForAJobDescription'} type='input'/></div>\r\n        <div><b>About me</b>: <Field className={classes.field} component={Textarea} name={'aboutMe'} type='input'/></div>\r\n        <div><b>Contacts</b>:{Object.keys(props.profile.contacts).map(key => {\r\n                return <div>\r\n                    {key} : <Field component={Input} name={'contacts.' + key} placeholder={key}\r\n                                   type='input'/>\r\n                </div>\r\n            }\r\n        )}\r\n        </div>\r\n        {props.error && <div className={classes.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n        <button onClick={props.handleSubmit} className={classes.button}>save</button>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React from 'react';\r\nimport classes from './MyProfile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {setEditMode} from \"../../../redux/profileReducer\";\r\n\r\nconst MyProfile = (props) => {\r\n\r\n\r\n    if (!props.profile.photos) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSelectedPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            props.setEditMode(false)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.avatar}>\r\n                <img src={!props.profile.photos.large ? userPhoto : props.profile.photos.large}/>\r\n                {props.isOwner &&\r\n                <div className={classes.root}>\r\n                    <input accept=\"image/*\" className={classes.input}\r\n                           type=\"file\" onChange={onSelectedPhoto}/>\r\n                </div>}\r\n            </div>\r\n            <div>\r\n                <div><b>{props.profile.fullName}</b></div>\r\n                <ProfileStatusWithHooks {...props} status={props.status} updateStatus={props.updateStatus}/>\r\n                {props.editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} {...props}/>\r\n                    : <ProfileData {...props}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        <div><b>Looking for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'} </div>\r\n        <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription}</div>\r\n        <div><b>About me</b>: {props.profile.aboutMe}</div>\r\n        <div>\r\n            <b>Contacts :</b>\r\n            {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                }\r\n            )}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: <a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport MyProfile from \"./MyProfile/MyProfile\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n                <div>\r\n                    <MyProfile {...props} isOwner={props.isOwner} profile={props.profile}\r\n                               status={props.status} updateStatus={props.updateStatus} editmode={props.editMode}/>\r\n                </div>\r\n                <div>\r\n                    <MyPostsContainer/>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    setEditMode,\r\n    setUserProfile,\r\n    updateStatus\r\n} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizesUserId\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        editMode={this.props.editMode}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizesUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    editMode: state.profilePage.editMode\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile, setEditMode}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}