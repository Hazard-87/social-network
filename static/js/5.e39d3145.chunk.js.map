{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyProfile/MyProfile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Posts/Posts.module.css","assets/images/user.png","components/Profile/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyProfile/ProfileStatusWithHooks.jsx","components/Profile/MyProfile/ProfileDataForm.jsx","components/common/upload/Upload.jsx","components/Profile/MyProfile/MyProfile.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Posts","createRef","className","classes","post","item","src","message","like","likesCount","onClick","MyPosts","memo","postElements","posts","reverse","map","index","key","MyPostsReduxForm","onSubmit","values","addPost","newPostBody","styles","reduxForm","form","handleSubmit","field","Field","component","Textarea","name","MyPostsContainer","profilePage","dispatch","addPostAC","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","input","Input","type","Object","keys","profile","contacts","placeholder","error","formSummaryError","action","listType","beforeUpload","file","Promise","resolve","reader","FileReader","readAsDataURL","onload","img","document","createElement","result","canvas","width","naturalWidth","height","naturalHeight","ctx","getContext","drawImage","fillStyle","textBaseline","font","fillText","toBlob","UploadFile","onSelectedPhoto","icon","UploadOutlined","ProfileData","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact","href","MyProfile","photos","Preloader","content","avatar","large","userPhoto","isOwner","Upload","files","length","savePhoto","fullName","initialValues","formData","saveProfile","then","Profile","editmode","ProfileContainer","userId","match","params","authorizesUserId","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","setUserProfile","withRouter"],"mappings":"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","file":"static/js/5.e39d3145.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return < Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return AuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"MyProfile_avatar__1lRxT\",\"status\":\"MyProfile_status__2Yej1\",\"contact\":\"MyProfile_contact__2Knu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__1I3mh\",\"newPost\":\"MyPosts_newPost__3roly\",\"send\":\"MyPosts_send__3EjLO\",\"posts\":\"MyPosts_posts__2NF7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__2WbMo\",\"like\":\"Posts_like__1kMoZ\",\"newComment\":\"Posts_newComment__1KoNN\",\"send\":\"Posts_send__20WxY\",\"post\":\"Posts_post__29zt5\"};","module.exports = __webpack_public_path__ + \"static/media/user.4b0cb4ba.png\";","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport {Button} from \"antd\";\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    let newCreatePost = React.createRef()\r\n\r\n    let newComment = ()=> {\r\n        // let post = newCreatePost.current.value\r\n        // newCreatePost.current.value = ''\r\n    }\r\n\r\n  return (\r\n      <div className={classes.post}>\r\n      <div className={classes.item}>\r\n          <img src='https://www.meme-arsenal.com/memes/ae1d44253a861f53d95864dd37c55a78.jpg'/> {props.message}\r\n      </div>\r\n          <div className={classes.like}>\r\n              <img src='https://img.icons8.com/cotton/2x/facebook-like.png' />\r\n              {props.likesCount}\r\n          </div>\r\n          <div>\r\n              <textarea />\r\n          </div>\r\n              <div>\r\n                  <Button onClick={newComment}>COMMENT\r\n                  </Button>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Posts from \"../Posts/Posts\";\r\nimport * as form from \"redux-form\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport {Button} from \"antd\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = [...props.posts].reverse().map((post, index) => <Posts key={index} message={post.post} likesCount={post.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n        values.newPostBody = ''\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>\r\n                <MyPostsReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={styles.field}>\r\n                <Field component={Textarea} name={'newPostBody'}/>\r\n            </div>\r\n            <div>\r\n                <Button onClick={props.handleSubmit}>\r\n                    SEND\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts : state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostAC(newPostBody))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\r\nimport styles from './MyProfile.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n            setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.status}>\r\n            {editMode\r\n                ? <div><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                : <div><span onClick={activateEditMode}>{props.status || '-----'}</span></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport classes from './MyProfile.module.css'\r\n\r\n\r\nimport { Button } from 'antd';\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><b> Full name: <Field className={classes.input} component={Input} name={'fullName'} type='input'/></b></div>\r\n        <div><b>looking for a job</b>: <Field  component={Input} name={'lookingForAJob'} type='checkbox'/></div>\r\n        <div><b>My professional skills</b>: <Field className={classes.field} component={Textarea}\r\n                                                   name={'lookingForAJobDescription'} type='input'/></div>\r\n        <div><b>About me</b>: <Field className={classes.field} component={Textarea} name={'aboutMe'} type='input'/></div>\r\n        <div><b>Contacts</b>:{Object.keys(props.profile.contacts).map(key => {\r\n                return <div>\r\n                    {key} : <Field component={Input} name={'contacts.' + key} placeholder={key}\r\n                                   type='input'/>\r\n                </div>\r\n            }\r\n        )}\r\n        </div>\r\n        {props.error && <div className={classes.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n        <Button onClick={props.handleSubmit}>SAVE</Button>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;\r\n","import React from \"react\";\r\nimport { Upload, Button } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst props = {\r\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n    listType: 'picture',\r\n    beforeUpload(file) {\r\n        return new Promise(resolve => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                const img = document.createElement('img');\r\n                img.src = reader.result;\r\n                img.onload = () => {\r\n                    const canvas = document.createElement('canvas');\r\n                    canvas.width = img.naturalWidth;\r\n                    canvas.height = img.naturalHeight;\r\n                    const ctx = canvas.getContext('2d');\r\n                    ctx.drawImage(img, 0, 0);\r\n                    ctx.fillStyle = 'red';\r\n                    ctx.textBaseline = 'middle';\r\n                    ctx.font = '33px Arial';\r\n                    ctx.fillText('Ant Design', 20, 20);\r\n                    canvas.toBlob(resolve);\r\n                };\r\n            };\r\n        });\r\n    },\r\n};\r\n\r\nconst UploadFile = ({onSelectedPhoto}) => {\r\n    return (\r\n    <>\r\n        <Upload {...props} onChange={onSelectedPhoto}>\r\n            <Button icon={<UploadOutlined/>} >Upload</Button>\r\n        </Upload>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default UploadFile;","import React from 'react';\r\nimport classes from './MyProfile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {setEditMode} from \"../../../redux/profileReducer\";\r\nimport UploadFile from \"../../common/upload/Upload\";\r\n\r\nconst MyProfile = (props) => {\r\n\r\n\r\n    if (!props.profile.photos) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSelectedPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            props.setEditMode(false)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.content}>\r\n            <div className={classes.avatar}>\r\n                <img src={!props.profile.photos.large ? userPhoto : props.profile.photos.large}/>\r\n                {props.isOwner &&\r\n\r\n                    <UploadFile onSelectedPhoto={onSelectedPhoto}/>\r\n                // <div className={classes.root}>\r\n                //     <input accept=\"image/*\" className={classes.input}\r\n                //            type=\"file\" onChange={onSelectedPhoto}/>\r\n                // </div>\r\n                }\r\n            </div>\r\n            <div>\r\n                <div><b>{props.profile.fullName}</b></div>\r\n                <ProfileStatusWithHooks {...props} status={props.status} updateStatus={props.updateStatus}/>\r\n                {props.editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} {...props}/>\r\n                    : <ProfileData {...props}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        <div><b>Looking for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'} </div>\r\n        <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription}</div>\r\n        <div><b>About me</b>: {props.profile.aboutMe}</div>\r\n        <div>\r\n            <b>Contacts :</b>\r\n            {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                }\r\n            )}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: <a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport MyProfile from \"./MyProfile/MyProfile\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n                <div>\r\n                    <MyProfile {...props} isOwner={props.isOwner} profile={props.profile}\r\n                               status={props.status} updateStatus={props.updateStatus} editmode={props.editMode}/>\r\n                </div>\r\n                <div>\r\n                    <MyPostsContainer/>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    setEditMode,\r\n    setUserProfile,\r\n    updateStatus\r\n} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizesUserId\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        editMode={this.props.editMode}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizesUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    editMode: state.profilePage.editMode\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile, setEditMode}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}