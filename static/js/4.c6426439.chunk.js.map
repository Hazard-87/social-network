{"version":3,"sources":["hoc/withAuthRedirect.js","components/Messages/Messages.module.css","components/Messages/Dialogs/Dialogs.module.css","components/Messages/Chatbar/Chatbar.module.css","components/Messages/Chatbar/Chat/Chat.module.css","../node_modules/@material-ui/core/esm/Icon/Icon.js","components/Messages/Dialogs/Dialogs.jsx","components/Messages/Chatbar/Chat/Chat.jsx","components/Messages/Chatbar/Chatbar.jsx","components/Messages/Chatbar/ChatbarContainer.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Icon","ref","classes","className","_props$color","color","_props$component","component","_props$fontSize","fontSize","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","muiName","withStyles","theme","userSelect","typography","pxToRem","width","height","overflow","flexShrink","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","Dialogs","dialogs","dialog","id","activeClassName","img","src","ava","Chat","chat","message","avatar","text","AddMessageReduxForm","reduxForm","form","makeStyles","margin","spacing","marginRight","marginBottom","position","top","left","field","useStyles","onSubmit","handleSubmit","Field","styles","Textarea","label","Button","onClick","variant","button","endIcon","Chatbar","messageElements","messagesPage","messages","map","m","Grid","container","direction","chatbar","xs","values","addMessage","newMessageBody","ChatbarContainer","dispatch","addMessageCreateAction","Messages","dialogsElements","compose"],"mappings":"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","file":"static/js/4.c6426439.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return < Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return AuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__37x4W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2TasP\",\"dialog\":\"Dialogs_dialog__11YB0\",\"active\":\"Dialogs_active__khaE2\",\"img\":\"Dialogs_img__3Hq4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatbar\":\"Chatbar_chatbar__1Ui5e\",\"sms\":\"Chatbar_sms__10b8S\",\"root\":\"Chatbar_root__3LMhr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Chat_message__2cOaC\",\"img\":\"Chat_img__Ul9oi\",\"text\":\"Chat_text__2f_oy\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    return (\r\n        <div className={classes.dialogs} >\r\n            <div className={classes.dialog}><NavLink to={'/messages/'+props.id}\r\n                                                     activeClassName={classes.active}>\r\n                <div className={classes.img}><img src={props.ava} /></div>\r\n                {props.name}\r\n            </NavLink></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport classes from './Chat.module.css';\r\n\r\nconst Chat = (props) => {\r\n    return (\r\n\r\n        <div className={classes.chat} >\r\n            <div className={classes.message} >\r\n                <div className={classes.img}><img src={props.avatar} /></div>\r\n                <div className={classes.text}>{props.message}</div >\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport styles from './Chatbar.module.css';\r\nimport Chat from \"./Chat/Chat\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst Chatbar = (props) => {\r\n    let messageElements = props.messagesPage.messages.map(m => <Chat message={m.message} avatar={m.ava} id={m.id}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody)\r\n        values.newMessageBody = ''\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\" className={styles.chatbar}>\r\n            <Grid xs={12}>\r\n            {messageElements}\r\n            </Grid>\r\n            <Grid xs={12}>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '50px',\r\n                marginRight: '13px',\r\n                marginBottom: '10px',\r\n                position: 'fixed',\r\n                top: '545px',\r\n                left: '1165px'\r\n            }\r\n        },\r\n        field: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '70ch',\r\n                position: 'fixed',\r\n                top: '530px'\r\n            }\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.field}>\r\n                <Field className={styles.field} component={Textarea} name={'newMessageBody'} label={'Chat'}/>\r\n            </div>\r\n            <div className={classes.root}>\r\n                <Button onClick={props.handleSubmit} variant=\"contained\" color=\"primary\"\r\n                        className={classes.button} endIcon={<Icon>send</Icon>}>\r\n\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Chatbar;","import React from 'react';\r\nimport {addMessageCreateAction} from \"../../../redux/dialogsReducer\";\r\nimport Chatbar from \"./Chatbar\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(addMessageCreateAction(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nconst ChatbarContainer = connect(mapStateToProps, mapDispatchToProps)(Chatbar);\r\n\r\nexport default ChatbarContainer;","import React from 'react';\r\nimport classes from './Messages.module.css';\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport ChatbarContainer from \"./Chatbar/ChatbarContainer\";\r\n\r\nconst Messages = (props) => {\r\n    let dialogsElements = props.dialogs.map(dialog => <Dialogs\r\n        name={dialog.name}\r\n        id={dialog.id}\r\n        ava={dialog.ava}/>)\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.messages}>\r\n            <div>\r\n                {dialogsElements}\r\n            </div>\r\n            <ChatbarContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messagesPage.dialogs,\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps),\r\n    withAuthRedirect\r\n)(Messages)"],"sourceRoot":""}