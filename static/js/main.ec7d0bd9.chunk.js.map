{"version":3,"sources":["redux/dialogsReducer.js","redux/usersReducer.js","components/common/Preloader/Preloader.module.css","api/api.js","redux/sidebarReducer.js","redux/auth-reducer.ts","redux/app-reducer.ts","redux/redux-store.js","hoc/withSuspense.js","components/Feeds/Feeds.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","App.js","index.js","components/Login/Login.module.css","components/common/FormsControls/FormsControl.js","components/common/FormsControls/FormsControl.module.css","redux/profileReducer.js","components/common/Preloader/Preloader.jsx","utils/validation/validators.js"],"names":["initialState","dialogs","id","name","ava","messages","message","addMessageCreateAction","newMessageBody","type","dialogsReducer","state","action","users","pageSize","totalPageCount","currentPage","isFetching","followingInProgress","requestUsers","dispatch","a","toggleIsFetching","usersAPI","getUsers","data","setUsers","items","setTotalPageCount","totalCount","requestMoreUsers","nextPage","setMoreUsers","follow","userId","toggleFollowingProgress","getFollow","resultCode","followAccept","unfollow","getUnfollow","unfollowAccept","setCurrentPage","setPageSize","usersReducer","map","u","followed","concat","filter","module","exports","instance","axios","baseURL","withCredentials","headers","get","then","response","post","delete","getAuth","getProfile","profileAPI","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","friends","sidebarReducer","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","initialized","appReducer","reducers","combineReducers","messagesPage","profilePage","profileReducer","sidebar","usersPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","withSuspense","Component","props","fallback","Preloader","Feeds","Music","Settings","handleFocus","event","target","select","LoginReduxForm","reduxForm","onSubmit","handleSubmit","className","styles","input","Field","placeholder","onFocus","component","Input","validate","required","checkbox","src","onClick","error","classes","formSummaryError","connect","authorizesUserId","lengrth","stopSubmit","_error","to","body","wrap","MessagesContainer","React","lazy","ProfileContainer","UsersContainer","Content","Layout","Header","Footer","Sider","SubMenu","Menu","App","collapsed","onCollapse","setState","this","initializeApp","style","minHeight","collapsible","theme","defaultSelectedKeys","mode","key","title","Item","icon","UserOutlined","EditOutlined","setEditMode","LogoutOutlined","LoginOutlined","MessageOutlined","TeamOutlined","SettingOutlined","ReadOutlined","CustomerServiceOutlined","margin","padding","path","render","textAlign","compose","withRouter","editMode","Promise","all","ReactDOM","document","getElementById","Element","meta","hasError","touched","formControl","Textarea","posts","likesCount","setUserProfile","setStatus","savePhotoSuccess","photos","getState","reject","addPostAC","newPostBody","size","spinner","value"],"mappings":"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","file":"static/js/main.ec7d0bd9.chunk.js","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {\r\n            id: 2,\r\n            name: 'Polina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Alina',\r\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Evelina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\r\n        },\r\n        { id: 5, name: 'Papa', ava: 'https://steepbend.ru/wp-content/uploads/2013/04/Avatarki.jpg' },\r\n        {\r\n            id: 6,\r\n            name: 'Mama',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-06/1528544211_youloveit_ru_avatarki_disney_princessy_ralf_protiv_interneta03.png'\r\n        },\r\n        { id: 7, name: 'Max', ava: 'https://1message.ru/wp-content/uploads/2017/03/ustanovka-avatarki7.jpg' },\r\n        { id: 8, name: 'Brat', ava: 'https://download-cs.net/steam/avatars/3412.jpg' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'На Avatarko.ru', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg' },\r\n        { id: 2, message: 'Паблик в котором💜', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg' },\r\n        { id: 3, message: 'Hi', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg' },\r\n        { id: 4, message: 'I\\'m norm', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg' },\r\n        { id: 5, message: 'I\\'m learn a react', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg' },\r\n        { id: 6, message: 'Perfect', ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg' }\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {\r\n                    id: 8, message: action.newMessageBody, ava: 'https://gg-pro.ru/files/avatars/1564818111.jpg'\r\n                }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessageCreateAction = (newMessageBody) => ({ type: 'ADD-MESSAGE', newMessageBody })\r\n\r\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_MORE_USERS = 'SET_MORE_USERS'\r\nconst SET_СURRENT_PAGE = 'SET_СURRENT_PAGE'\r\nconst SET_PAGE_SIZE = 'SET_PAGE_SIZE'\r\nconst SET_TOTAL_PAGE_COUNT = 'SET_TOTAL_PAGE_COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalPageCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW :\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_MORE_USERS: {\r\n            let users = state.users.concat(action.users)\r\n            return {...state, users: users}\r\n        }\r\n        case SET_СURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_PAGE_SIZE: {\r\n            return {...state, pageSize: action.pageSize}\r\n        }\r\n        case SET_TOTAL_PAGE_COUNT: {\r\n            return {...state, totalPageCount: action.totalPageCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(currentPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalPageCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const requestMoreUsers = (nextPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        let data = await usersAPI.getUsers(nextPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setMoreUsers(data.items))\r\n        dispatch(setTotalPageCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.getFollow(userId)\r\n        if (data.resultCode == 0) {\r\n            dispatch(followAccept(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId))\r\n        let data = await usersAPI.getUnfollow(userId)\r\n        if (data.resultCode == 0) {\r\n            dispatch(unfollowAccept(userId))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId))\r\n    }\r\n}\r\n\r\nexport const followAccept = (userId) => ({type: 'FOLLOW', userId})\r\nexport const unfollowAccept = (userId) => ({type: 'UNFOLLOW', userId})\r\nexport const setUsers = (users) => ({type: 'SET_USERS', users})\r\nexport const setMoreUsers = (users) => ({type: 'SET_MORE_USERS', users})\r\nexport const setCurrentPage = (currentPage) => ({type: 'SET_СURRENT_PAGE', currentPage})\r\nexport const setPageSize = (pageSize) => ({type: 'SET_PAGE_SIZE', pageSize})\r\nexport const setTotalPageCount = (totalPageCount) => ({type: 'SET_TOTAL_PAGE_COUNT', totalPageCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: 'TOGGLE_IS_FETCHING', isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: 'TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching,\r\n    userId\r\n})\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Preloader_spinner__2jXgN\"};","import * as axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\"API-KEY\": \"e48e9649-c731-4063-bdca-82c75640897b\"}\r\n    // headers: {\"API-KEY\": \"d347e033-1c2d-465d-899e-93fbe631170a\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getFollow(id) {\r\n        return instance.post(`follow/${id}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getUnfollow(id) {\r\n        return instance.delete(`follow/${id}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    },\r\n    savePhoto(file) {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put(`profile/photo`, formData\r\n        )\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe = false, captcha= null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}\r\n","let initialState = {friends: [\r\n        {\r\n            id: 1,\r\n            name: 'Polina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168825_youloveit_ru_ariana_grande_emoji_avatarki01.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Alina',\r\n            ava: 'https://trikky.ru/wp-content/blogs.dir/1/files/2018/06/1520168801_youloveit_ru_ariana_grande_emoji_avatarki18.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Evelina',\r\n            ava: 'http://www.youloveit.ru/uploads/posts/2018-03/1520168814_youloveit_ru_ariana_grande_emoji_avatarki09.jpg'\r\n        }\r\n    ]}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA'\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS'\r\n\r\nexport type InitialStateType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\r\n    type: 'SET_USER_DATA',\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport type GetCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: { captchaUrl: string }\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => ({\r\n    type: 'GET_CAPTCHA_URL_SUCCESS', payload: {captchaUrl}\r\n})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n        let response = await authAPI.me()\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.lengrth > 0 ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default authReducer;","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS'\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: 'INITIALIZED_SUCCESS'})\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    Promise.all([dispatch(getAuthUserData())]).then(() => {\r\n       dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    messagesPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport classes from './Feeds.module.css';\r\n\r\nconst Feeds = () => {\r\n    return (\r\n        <div>\r\n            Feeds\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feeds;","import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n           Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","// import React from \"react\";\r\n// import styles from './Login.module.css';\r\n// import classes from '../common/FormsControls/FormsControl.module.css'\r\n// import {Field, reduxForm} from \"redux-form\";\r\n// import {Check, Input, Log, Pass} from \"../common/FormsControls/FormsControl\";\r\n// import {required} from \"../../utils/validation/validators\";\r\n// import {login} from '../../redux/auth-reducer'\r\n// import {connect} from \"react-redux\";\r\n// import {Redirect} from \"react-router-dom\";\r\n// import Button from \"@material-ui/core/Button\";\r\n//\r\n// const handleFocus = (event) => event.target.select();\r\n//\r\n// const LoginForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit} role='form'>\r\n//             <div>\r\n//                 <Field name={'email'} type='email' onFocus={handleFocus}\r\n//                        component={Log} validate={[required]}/>\r\n//             </div>\r\n//             <div>\r\n//                 <Field name={'password'}\r\n//                        onFocus={handleFocus}\r\n//                        component={Pass} validate={[required]}/>\r\n//             </div>\r\n//             <div>\r\n//                     <Field component={Check} className={styles.checkbox} name={'rememberMe'} type={'checkbox'}/>\r\n//             </div>\r\n//\r\n//             {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n//             {props.captchaUrl && <Field placeholder={'captcha'} name={'captcha'}\r\n//                    component={Input} validate={[required]}/>}\r\n//\r\n//             <div className={styles.login}>\r\n//                 <Button onClick={props.handleSubmit} variant=\"outlined\" color=\"primary\">Login</Button>\r\n//             </div>\r\n//             {props.error && <div className={classes.formSummaryError}>\r\n//                 {props.error}\r\n//             </div>\r\n//             }\r\n//         </form>\r\n//     )\r\n// }\r\n//\r\n// const LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n// const Login = (props) => {\r\n//     const onSubmit = (formData) => {\r\n//         props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n//     }\r\n//\r\n//     if (props.isAuth) {\r\n//         return <Redirect to={`/profile`}/>\r\n//     }\r\n//\r\n//     return (\r\n//         <div className={styles.body}>\r\n//             <div className={styles.wrap}>\r\n//                 <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n//\r\n// const mapStateToProps = (state) => ({\r\n//     isAuth: state.auth.isAuth,\r\n//     authorizesUserId: state.auth.userId,\r\n//     captchaUrl: state.auth.captchaUrl\r\n// })\r\n// export default connect(mapStateToProps, {login})(Login)\r\n\r\nimport React from 'react';\r\nimport styles from './Login.module.css';\r\nimport classes from '../common/FormsControls/FormsControl.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControl';\r\nimport { required } from '../../utils/validation/validators';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Button} from \"antd\";\r\n\r\n\r\nconst handleFocus = (event) => event.target.select();\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={styles.input}>\r\n                <Field\r\n                    placeholder={'email'}\r\n                    name={'email'}\r\n                    onFocus={handleFocus}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div className={styles.input}>\r\n                <Field\r\n                    placeholder={'password'}\r\n                    name={'password'}\r\n                    type={'password'}\r\n                    onFocus={handleFocus}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    component={Input}\r\n                    className={styles.checkbox}\r\n                    name={'rememberMe'}\r\n                    type={'checkbox'}\r\n                />\r\n                remember me\r\n            </div>\r\n\r\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n            {props.captchaUrl && <Field placeholder={'captcha'} name={'captcha'}\r\n                                        component={Input} validate={[required]}/>}\r\n\r\n            <div>\r\n                <Button onClick={props.handleSubmit}>Login</Button>\r\n            </div>\r\n            {props.error && <div className={classes.formSummaryError}>{props.error}</div>}\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n        // formData.email = ''\r\n        // formData.password = ''\r\n    };\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={`/profile/`} />;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.body}>\r\n            <div className={styles.wrap}>\r\n                <h2>Login</h2>\r\n                <LoginReduxForm onSubmit={onSubmit} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    authorizesUserId: state.auth.userId,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React, {Suspense} from 'react';\r\nimport {withRouter, BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {initializeApp} from './redux/app-reducer';\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\nimport './App.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport Feeds from './components/Feeds/Feeds';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\nimport Login from './components/Login/Login';\r\n\r\nimport {Layout, Menu, Breadcrumb, Image, Avatar} from 'antd';\r\nimport {\r\n    LoginOutlined,\r\n    WechatOutlined,\r\n    SettingOutlined,\r\n    UserOutlined,\r\n    ReadOutlined,\r\n    EditOutlined,\r\n    MessageOutlined,\r\n    TeamOutlined,\r\n    CustomerServiceOutlined,\r\n    LogoutOutlined\r\n} from '@ant-design/icons';\r\nimport {logout} from './redux/auth-reducer';\r\nimport {setEditMode} from './redux/profileReducer';\r\n\r\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    onCollapse = (collapsed) => {\r\n        this.setState({collapsed});\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>;\r\n        }\r\n        const {collapsed} = this.state;\r\n\r\n        const onEditMode = () => {\r\n            this.props.setEditMode(true);\r\n        };\r\n        return (\r\n            <Router>\r\n                <Layout style={{minHeight: '100vh'}}>\r\n                    <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n                        <div className=\"logo\"/>\r\n                        <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                            {!this.props.isAuth ? (\r\n                                <Menu.Item key=\"1\" icon={<LoginOutlined/>}>\r\n                                    <Link to={'/login'}>Sign In</Link>\r\n                                </Menu.Item>\r\n                            ) : (\r\n                                <SubMenu\r\n                                    key=\"sub1\"\r\n                                    // icon={\r\n                                    //     <Avatar\r\n                                    //         src={\r\n                                    //             <Image\r\n                                    //                 src={this.props.profile.photos && this.props.profile.photos.large}/>\r\n                                    //         }\r\n                                    //     />\r\n                                    // }\r\n                                    title={this.props.login}>\r\n                                    <Menu.Item key=\"1\" icon={<UserOutlined/>}>\r\n                                        <Link to={`/profile`}>My profile</Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2\" icon={<EditOutlined/>}>\r\n                                        <Link onClick={onEditMode} to={`/profile`}>\r\n                                            Edit profile\r\n                                        </Link>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item onClick={this.props.logout} key=\"3\" icon={<LogoutOutlined/>}>\r\n                                        Logout\r\n                                    </Menu.Item>\r\n                                </SubMenu>\r\n                            )}\r\n                            <Menu.Item key=\"4\" icon={<MessageOutlined/>}>\r\n                                <Link to=\"/messages\">Messages</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"5\" icon={<TeamOutlined/>}>\r\n                                <Link to=\"/users\">Users</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"6\" icon={<SettingOutlined/>}>\r\n                                <Link to=\"/settings\">Settings</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"7\" icon={<ReadOutlined/>}>\r\n                                <Link to=\"/feeds\">Feeds</Link>\r\n                            </Menu.Item>\r\n                            <Menu.Item key=\"8\" icon={<CustomerServiceOutlined/>}>\r\n                                <Link to=\"/music\">Music</Link>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Sider>\r\n                    <Layout className=\"site-layout\">\r\n                        {/*<Header className=\"site-layout-background\" style={{padding: 0}}/>*/}\r\n                        <Content style={{margin: '0 16px'}}>\r\n                            <Breadcrumb style={{margin: '16px 0'}}>\r\n                                {/*<Breadcrumb.Item>User</Breadcrumb.Item>*/}\r\n                                {/*<Breadcrumb.Item>Bill</Breadcrumb.Item>*/}\r\n                            </Breadcrumb>\r\n                            <div className=\"site-layout-background\" style={{padding: 24, minHeight: 360}}>\r\n                                <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)}/>\r\n                                <Route path=\"/feeds\" render={() => <Feeds/>}/>\r\n                                <Route path=\"/messages\" render={withSuspense(MessagesContainer)}/>\r\n                                <Route path=\"/music\" render={() => <Music/>}/>\r\n                                <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n                                <Route path=\"/settings\" render={() => <Settings/>}/>\r\n                                <Route path=\"/login\" render={() => <Login/>}/>\r\n                            </div>\r\n                        </Content>\r\n                        <Footer style={{textAlign: 'center'}}>Hazard Design ©2021 Created by Home</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    login: state.auth.login,\r\n    editMode: state.profilePage.editMode,\r\n    profile: state.profilePage.profile,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp, logout, setEditMode}),\r\n)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nimport './index.css';\r\nimport store from './redux/redux-store';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Login_wrap__27vUa\"};","import React from \"react\";\r\nimport styles from './FormsControl.module.css'\r\n\r\nconst Element = Element => ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={ styles.formControl + \" \" + (hasError ? styles.error : \"\") }>\r\n            <Element {...input} {...props} />\r\n            { hasError && <span> { meta.error } </span> }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = Element(\"textarea\")\r\nexport const Input = Element(\"input\")\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__vdUzH\",\"error\":\"FormsControl_error__LQdlV\",\"formSummaryError\":\"FormsControl_formSummaryError__1DkQ2\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\nconst SET_EDIT_MODE = 'SET_EDIT_MODE'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 3, post: 'Hi, how are you?', likesCount: 5},\r\n        {id: 2, post: 'It\\'s my first post', likesCount: 32},\r\n        {id: 1, post: 'I\\'m learn react from it-kamasutra.com', likesCount: 3},\r\n    ],\r\n    profile: [],\r\n    status: '',\r\n    editMode: false\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 4, post: action.newPostBody, likesCount: 0}]\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state, profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        case SET_EDIT_MODE: {\r\n            return {\r\n                ...state, editMode: action.data\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveProfile(profile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0])\r\n        // dispatch(stopSubmit(\"edit-profile\", {\"contacts\" : {'facebook': response.data.messages[0]}}))\r\n    }\r\n}\r\n\r\nexport const addPostAC = (newPostBody) => ({type: 'ADD-POST', newPostBody})\r\nexport const setUserProfile = (profile) => ({type: 'SET_USER_PROFILE', profile})\r\nexport const setStatus = (status) => ({type: 'SET_STATUS', status})\r\nexport const savePhotoSuccess = (photos) => ({type: 'SAVE_PHOTO_SUCCESS', photos})\r\nexport const setEditMode = (data) => ({type: 'SET_EDIT_MODE', data})\r\n\r\nexport default profileReducer;","import classes from './Preloader.module.css'\r\nimport React from \"react\";\r\nimport { Spin, Space } from 'antd';\r\n\r\nconst Preloader = () => {\r\n    return <Space size=\"middle\">\r\n        <Spin className={classes.spinner} size=\"large\" />\r\n    </Space>\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n        return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max Length is ${maxLength} symbols`;\r\n    return undefined;\r\n}"],"sourceRoot":""}