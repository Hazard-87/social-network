{"version":3,"sources":["hoc/withAuthRedirect.js","assets/images/user.png","components/Profile/MyProfile/MyProfile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyProfile/ProfileStatusWithHooks.jsx","components/Profile/MyProfile/ProfileDataForm.jsx","components/Profile/MyProfile/MyProfile.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Posts","createRef","className","classes","post","item","src","message","like","likesCount","TextField","id","label","Button","onClick","variant","button","endIcon","Icon","MyPosts","memo","postElements","posts","reverse","map","MyPostsReduxForm","onSubmit","values","addPost","newPostBody","styles","reduxForm","form","makeStyles","theme","field","margin","spacing","width","root","float","marginRight","marginBottom","useStyles","handleSubmit","Field","component","Textarea","name","color","MyPostsContainer","profilePage","dispatch","addPostAC","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","value","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","input","Input","type","Checked","Object","keys","profile","contacts","key","placeholder","error","formSummaryError","size","startIcon","ProfileData","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","contact","href","MyProfile","display","photos","Preloader","Grid","direction","container","justify","sm","avatar","large","userPhoto","isOwner","accept","files","length","savePhoto","htmlFor","IconButton","aria-label","fullName","initialValues","formData","saveProfile","then","Profile","xs","editmode","ProfileContainer","userId","match","params","authorizesUserId","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","setUserProfile","withRouter"],"mappings":"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","file":"static/js/5.900b9c03.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return < Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return AuthRedirectComponent\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.4b0cb4ba.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"MyProfile_avatar__1RRyK\",\"status\":\"MyProfile_status__mVfxj\",\"contact\":\"MyProfile_contact__vKyqc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__2y_2I\",\"newPost\":\"MyPosts_newPost__1_5FO\",\"send\":\"MyPosts_send__hQ1gk\",\"posts\":\"MyPosts_posts__3SjJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__E3G83\",\"like\":\"Posts_like__AOF3L\",\"newComment\":\"Posts_newComment__1dJ2o\",\"send\":\"Posts_send__WLL5v\",\"post\":\"Posts_post__2xOck\"};","import React from 'react';\r\nimport classes from './Posts.module.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\n    let newCreatePost = React.createRef()\r\n\r\n    let newComment = ()=> {\r\n        // let post = newCreatePost.current.value\r\n        // newCreatePost.current.value = ''\r\n    }\r\n\r\n  return (\r\n      <div className={classes.post}>\r\n      <div className={classes.item}>\r\n          <img src='https://www.meme-arsenal.com/memes/ae1d44253a861f53d95864dd37c55a78.jpg'/> {props.message}\r\n      </div>\r\n          <div className={classes.like}>\r\n              <img src='https://img.icons8.com/cotton/2x/facebook-like.png' />\r\n              {props.likesCount}\r\n          </div>\r\n          <div>\r\n              <TextField id=\"standard-basic\" label=\"Comment\" />\r\n          </div>\r\n              <div>\r\n                  <Button onClick={newComment} variant=\"contained\" className={classes.button}\r\n                      endIcon={<Icon>send</Icon>}>send\r\n                  </Button>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Posts from \"../Posts/Posts\";\r\nimport * as form from \"redux-form\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = [...props.posts].reverse().map(post => <Posts message={post.post} likesCount={post.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostBody)\r\n        values.newPostBody = ''\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <div>\r\n                <MyPostsReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={styles.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet MyPostsForm = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        field: {\r\n            '& .MuiTextField-root': {\r\n                margin: theme.spacing(1),\r\n                width: '98ch',\r\n            },\r\n        },\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n                width: '150px',\r\n                float: 'right',\r\n                marginRight: '13px',\r\n                marginBottom: '10px'\r\n            }\r\n        }\r\n    }));\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.field}>\r\n                <Field component={Textarea} name={'newPostBody'} label={'New Post'} />\r\n            </div>\r\n            <div className={classes.root}>\r\n                <Button onClick={props.handleSubmit} variant=\"contained\" color=\"primary\"\r\n                         endIcon={<Icon>send</Icon>}>\r\n                    Send\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostsReduxForm = reduxForm({form: 'addPostForm'})(MyPostsForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts : state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostBody) => {\r\n            dispatch(addPostAC(newPostBody))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useEffect, useState} from \"react\";\r\nimport styles from './MyProfile.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n            setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={styles.status}>\r\n            {editMode\r\n                ? <div><input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n                : <div><span onClick={activateEditMode}>{props.status || '-----'}</span></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Checked, Input} from \"../../common/FormsControls/FormsControl\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        button: {\r\n            margin: theme.spacing(1),\r\n        },\r\n        field: {\r\n            margin: theme.spacing(1),\r\n            width: '40ch',\r\n        },\r\n        input: {\r\n            margin: theme.spacing(1),\r\n            width: '25ch'\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><b> Full name: <Field className={classes.input} component={Input} name={'fullName'} type='input'/></b></div>\r\n        <div><b>looking for a job</b>: <Field  component={Checked} name={'lookingForAJob'} type='checkbox'/></div>\r\n        <div><b>My professional skills</b>: <Field className={classes.field} component={Textarea}\r\n                                                   name={'lookingForAJobDescription'} type='input'/></div>\r\n        <div><b>About me</b>: <Field className={classes.field} component={Textarea} name={'aboutMe'} type='input'/></div>\r\n        <div><b>Contacts</b>:{Object.keys(props.profile.contacts).map(key => {\r\n                return <div>\r\n                    {key} : <Field component={Input} name={'contacts.' + key} placeholder={key}\r\n                                   type='input'/>\r\n                </div>\r\n            }\r\n        )}\r\n        </div>\r\n        {props.error && <div className={classes.formSummaryError}>\r\n            {props.error}\r\n        </div>}\r\n        <Button onClick={props.handleSubmit} variant=\"contained\"\r\n                color=\"primary\" size=\"small\" className={classes.button}\r\n                startIcon={<SaveIcon/>}>save</Button>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataReduxForm;","import React, {useState} from 'react';\r\nimport styles from './MyProfile.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from '../../../assets/images/user.png';\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport {Grid} from \"@material-ui/core\";\r\n\r\n\r\nconst MyProfile = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }));\r\n    const classes = useStyles()\r\n\r\n    if (!props.profile.photos) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onSelectedPhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n            props.setEditMode(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Grid direction=\"row\" container justify=\"flex-start\">\r\n            <Grid sm={4} className={styles.avatar}>\r\n                <img src={!props.profile.photos.large ? userPhoto : props.profile.photos.large}/>\r\n                {props.isOwner &&\r\n                <div className={classes.root}>\r\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\"\r\n                           type=\"file\" onChange={onSelectedPhoto}/>\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            <PhotoCamera/>\r\n                        </IconButton>\r\n                    </label>\r\n                </div>}\r\n            </Grid>\r\n            <Grid sm={7}>\r\n                <div><b>{props.profile.fullName}</b></div>\r\n                <ProfileStatusWithHooks {...props} status={props.status} updateStatus={props.updateStatus}/>\r\n                {props.editMode\r\n                    ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} {...props}/>\r\n                    : <ProfileData {...props}/>}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div>\r\n        <div><b>Looking for a job</b>: {props.profile.lookingForAJob ? 'Yes' : 'No'} </div>\r\n        <div><b>My professional skills</b>: {props.profile.lookingForAJobDescription}</div>\r\n        <div><b>About me</b>: {props.profile.aboutMe}</div>\r\n        <div>\r\n            <b>Contacts :</b>\r\n            {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                }\r\n            )}\r\n        </div>\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={styles.contact}><b>{contactTitle}</b>: <a href={contactValue}>{contactValue}</a></div>\r\n}\r\n\r\nexport default MyProfile;","import React from 'react';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport MyProfile from \"./MyProfile/MyProfile\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"column\">\r\n                <Grid xs={12}>\r\n                    <MyProfile {...props} isOwner={props.isOwner} profile={props.profile}\r\n                               status={props.status} updateStatus={props.updateStatus} editmode={props.editMode}/>\r\n                </Grid>\r\n                <Grid xs={12}>\r\n                    <MyPostsContainer/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    savePhoto,\r\n    saveProfile,\r\n    setEditMode,\r\n    setUserProfile,\r\n    updateStatus\r\n} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizesUserId\r\n        }\r\n        this.props.getProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        savePhoto={this.props.savePhoto}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        editMode={this.props.editMode}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizesUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    editMode: state.profilePage.editMode\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile, setEditMode}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}