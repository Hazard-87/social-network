{"version":3,"sources":["hoc/withAuthRedirect.js","components/Messages/Messages.module.css","components/Messages/Dialogs/Dialogs.module.css","components/Messages/Chatbar/Chatbar.module.css","components/Messages/Chatbar/Chat/Chat.module.css","../node_modules/@material-ui/core/esm/Icon/Icon.js","components/Messages/Dialogs/Dialogs.jsx","components/Messages/Chatbar/Chat/Chat.jsx","components/Messages/Chatbar/Chatbar.jsx","components/Messages/Chatbar/ChatbarContainer.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Icon","ref","classes","className","_props$color","color","_props$component","component","_props$fontSize","fontSize","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","muiName","withStyles","theme","userSelect","typography","pxToRem","width","height","overflow","flexShrink","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","Dialogs","dialogs","dialog","id","activeClassName","img","src","ava","Chat","chat","message","avatar","text","AddMessageReduxForm","reduxForm","form","makeStyles","margin","spacing","float","marginRight","marginBottom","field","useStyles","onSubmit","handleSubmit","Field","Textarea","placeholder","Button","onClick","variant","button","endIcon","Chatbar","messageElements","messagesPage","messages","map","m","styles","chatbar","values","addMessage","newMessageBody","ChatbarContainer","dispatch","addMessageCreateAction","Messages","dialogsElements","compose"],"mappings":"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","file":"static/js/4.27a30060.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to='/login'/>\n            return < Component {...this.props} />\n        }\n    }\n\n    let AuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return AuthRedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__24vfu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__21gkV\",\"dialog\":\"Dialogs_dialog__2uWZD\",\"active\":\"Dialogs_active__TovDd\",\"img\":\"Dialogs_img__qQNCv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatbar\":\"Chatbar_chatbar__i3Jt3\",\"sms\":\"Chatbar_sms__3nZLn\",\"root\":\"Chatbar_root__bWmdD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Chat_message__Fk6dY\",\"img\":\"Chat_img__3k4IQ\",\"text\":\"Chat_text__IyOeZ\"};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      fontSize: theme.typography.pxToRem(24),\n      width: '1em',\n      height: '1em',\n      // Chrome fix for https://bugs.chromium.org/p/chromium/issues/detail?id=820541\n      // To remove at some point.\n      overflow: 'hidden',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  };\n};\nvar Icon = /*#__PURE__*/React.forwardRef(function Icon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"fontSize\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx('material-icons', classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    \"aria-hidden\": true,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes = {\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary', 'action', 'error', 'disabled']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['inherit', 'default', 'small', 'large'])\n} : void 0;\nIcon.muiName = 'Icon';\nexport default withStyles(styles, {\n  name: 'MuiIcon'\n})(Icon);","import React from 'react';\nimport classes from './Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Dialogs = (props) => {\n\n    return (\n        <div className={classes.dialogs} >\n            <div className={classes.dialog}><NavLink to={'/messages/'+props.id}\n                                                     activeClassName={classes.active}>\n                <div className={classes.img}><img src={props.ava} /></div>\n                {props.name}\n            </NavLink></div>\n        </div>\n    )\n}\n\nexport default Dialogs;","import React from 'react';\nimport classes from './Chat.module.css';\n\nconst Chat = (props) => {\n    return (\n\n        <div className={classes.chat} >\n            <div className={classes.message} >\n                <div className={classes.img}><img src={props.avatar} /></div>\n                <div className={classes.text}>{props.message}</div >\n            </div>\n        </div>\n    )\n}\n\nexport default Chat;","import React from 'react';\nimport styles from './Chatbar.module.css';\nimport Chat from \"./Chat/Chat\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControl\";\nimport {maxLengthCreator, required} from \"../../../utils/validation/validators\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Icon from \"@material-ui/core/Icon\";\n\n\nconst Chatbar = (props) => {\n    let messageElements = props.messagesPage.messages.map(m => <Chat message={m.message} avatar={m.ava} id={m.id}/>)\n\n    let addNewMessage = (values) => {\n        props.addMessage(values.newMessageBody)\n        values.newMessageBody = ''\n    }\n\n    return (\n        <div className={styles.chatbar}>\n            {messageElements}\n            <div>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst AddMessageForm = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '150px',\n                float: 'right',\n                marginRight: '13px',\n                marginBottom: '10px'\n            }\n        },\n        field: {\n            '& .MuiTextField-root': {\n                margin: theme.spacing(1),\n                width: '78ch'\n            }\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div className={classes.field}>\n                <Field component={Textarea} name={'newMessageBody'}\n                       placeholder={'Enter your message...'}/>\n            </div>\n            <div className={classes.root}>\n                <Button onClick={props.handleSubmit}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        endIcon={<Icon>send</Icon>}\n                >\n                    Send\n                </Button>\n                {/*<button >*/}\n                {/*    /!*<Button variant=\"outlined\" color=\"primary\">send</Button>*!/*/}\n                {/*    send*/}\n                {/*</button>*/}\n            </div>\n        </form>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Chatbar;","import React from 'react';\nimport {addMessageCreateAction} from \"../../../redux/dialogsReducer\";\nimport Chatbar from \"./Chatbar\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addMessage: (newMessageBody) => {\n            dispatch(addMessageCreateAction(newMessageBody))\n        }\n    }\n}\n\nconst ChatbarContainer = connect(mapStateToProps, mapDispatchToProps)(Chatbar);\n\nexport default ChatbarContainer;","import React from 'react';\nimport classes from './Messages.module.css';\nimport Dialogs from \"./Dialogs/Dialogs\";\nimport ChatbarContainer from \"./Chatbar/ChatbarContainer\";\n\nconst Messages = (props) => {\n    let dialogsElements = props.dialogs.map(dialog => <Dialogs\n        name={dialog.name}\n        id={dialog.id}\n        ava={dialog.ava}/>)\n\n\n\n    return (\n        <div className={classes.messages}>\n            <div>\n                {dialogsElements}\n            </div>\n            <ChatbarContainer/>\n        </div>\n    )\n}\n\nexport default Messages;","import React from 'react';\nimport {connect} from \"react-redux\";\nimport Messages from \"./Messages\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogs: state.messagesPage.dialogs,\n    }\n}\n\nexport default compose (\n    connect(mapStateToProps),\n    withAuthRedirect\n)(Messages)"],"sourceRoot":""}